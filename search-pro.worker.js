const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":106,\"nextId\":106,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"2@0\",\"3\":\"3\",\"4\":\"3#插入排序\",\"5\":\"3#选择排序\",\"6\":\"3#冒泡排序\",\"7\":\"3#归并排序\",\"8\":\"3@0\",\"9\":\"3@1\",\"10\":\"4\",\"11\":\"4#o-定义\",\"12\":\"4#ω-定义\",\"13\":\"4#θ-定义\",\"14\":\"4#o-定义-1\",\"15\":\"4#ω-定义-1\",\"16\":\"4@0\",\"17\":\"5\",\"18\":\"5#矩阵相乘\",\"19\":\"5#矩阵相乘-分治\",\"20\":\"5#矩阵相乘-strassen\",\"21\":\"5#递归时间复杂度计算方法\",\"22\":\"5#替换法\",\"23\":\"5#递归树法\",\"24\":\"5#主方法\",\"25\":\"5#akra-bazi法\",\"26\":\"5@0\",\"27\":\"5@1\",\"28\":\"6\",\"29\":\"6#雇佣问题\",\"30\":\"6#指示器随机变量\",\"31\":\"6#示例-雇佣问题\",\"32\":\"6#示例-逆序对的期望数\",\"33\":\"6#随机化算法\",\"34\":\"6#概率分析示例\",\"35\":\"6#生日悖论\",\"36\":\"6#球与桶\",\"37\":\"6@0\",\"38\":\"6@1\",\"39\":\"7\",\"40\":\"7#堆\",\"41\":\"7#维持堆的性质\",\"42\":\"7#构造堆\",\"43\":\"7#时间复杂度\",\"44\":\"7#堆排序\",\"45\":\"7#优先级队列\",\"46\":\"7@0\",\"47\":\"7@1\",\"48\":\"8\",\"49\":\"8@0\",\"50\":\"9\",\"51\":\"9@0\",\"52\":\"9@1\",\"53\":\"10\",\"54\":\"10@0\",\"55\":\"10@1\",\"56\":\"11\",\"57\":\"11#markdown-介绍\",\"58\":\"11#markdown-配置\",\"59\":\"11#markdown-扩展\",\"60\":\"11#vuepress-扩展\",\"61\":\"11#主题扩展\",\"62\":\"11#选项卡\",\"63\":\"11#脚注\",\"64\":\"11#导入文件\",\"65\":\"11#tex-语法\",\"66\":\"11#任务列表\",\"67\":\"11#图片增强\",\"68\":\"11#上下角标\",\"69\":\"11#组件\",\"70\":\"11@0\",\"71\":\"11@1\",\"72\":\"12\",\"73\":\"12#页面标题\",\"74\":\"12#页面信息\",\"75\":\"12#页面内容\",\"76\":\"12#组件\",\"77\":\"12@0\",\"78\":\"12@1\",\"79\":\"13\",\"80\":\"13@0\",\"81\":\"14\",\"82\":\"14#光栅化三角形\",\"83\":\"14#重心坐标计算\",\"84\":\"14#透视正确插值\",\"85\":\"14@0\",\"86\":\"14@1\",\"87\":\"15\",\"88\":\"15#线性代数基础\",\"89\":\"15#秩\",\"90\":\"15#行列式\",\"91\":\"15#基本变换\",\"92\":\"15#平移\",\"93\":\"15#旋转\",\"94\":\"15#推导\",\"95\":\"15#缩放\",\"96\":\"15#剪切\",\"97\":\"15#视图变换\",\"98\":\"15#投影矩阵\",\"99\":\"15#正交投影\",\"100\":\"15#opengl\",\"101\":\"15#directx\",\"102\":\"15#透视投影\",\"103\":\"15@0\",\"104\":\"15@1\",\"105\":\"16\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,2],\"1\":[1],\"2\":[null,null,1],\"3\":[1],\"4\":[1,22],\"5\":[1,21],\"6\":[1,17],\"7\":[1,37],\"8\":[null,null,1],\"9\":[null,null,1],\"10\":[1],\"11\":[1,10],\"12\":[1,10],\"13\":[1,11],\"14\":[1,13],\"15\":[1,13],\"16\":[null,null,1],\"17\":[1],\"18\":[1,18],\"19\":[3,48],\"20\":[3,16],\"21\":[1],\"22\":[1,28],\"23\":[1,8],\"24\":[1,38],\"25\":[2,21],\"26\":[null,null,1],\"27\":[null,null,1],\"28\":[1],\"29\":[1,42],\"30\":[1,19],\"31\":[3,26],\"32\":[3,12],\"33\":[1,91],\"34\":[1],\"35\":[1,48],\"36\":[1,68],\"37\":[null,null,1],\"38\":[null,null,2],\"39\":[1],\"40\":[1,10],\"41\":[1,31],\"42\":[1,14],\"43\":[1,21],\"44\":[1,20],\"45\":[1,41],\"46\":[null,null,1],\"47\":[null,null,2],\"48\":[1],\"49\":[null,null,1],\"50\":[1,18],\"51\":[null,null,1],\"52\":[null,null,1],\"53\":[1,20],\"54\":[null,null,1],\"55\":[null,null,1],\"56\":[2,10],\"57\":[2,8],\"58\":[2,12],\"59\":[2,11],\"60\":[2,10],\"61\":[1,8],\"62\":[1,1],\"63\":[1,3],\"64\":[1,1],\"65\":[2,10],\"66\":[1,5],\"67\":[1,2],\"68\":[1,3],\"69\":[1],\"70\":[null,null,1],\"71\":[null,null,1],\"72\":[1,3],\"73\":[1,19],\"74\":[1,20],\"75\":[1,12],\"76\":[1,13],\"77\":[null,null,1],\"78\":[null,null,2],\"79\":[1],\"80\":[null,null,1],\"81\":[1],\"82\":[1,45],\"83\":[1,18],\"84\":[1,73],\"85\":[null,null,1],\"86\":[null,null,1],\"87\":[1],\"88\":[1,23],\"89\":[1,3],\"90\":[1,14],\"91\":[1,22],\"92\":[1,7],\"93\":[1,13],\"94\":[1,10],\"95\":[1,3],\"96\":[1,3],\"97\":[1,43],\"98\":[1],\"99\":[1,31],\"100\":[1,8],\"101\":[1,8],\"102\":[1,38],\"103\":[null,null,1],\"104\":[null,null,1],\"105\":[1,3]},\"averageFieldLength\":[1.1824897827866365,18.690091937544526,0.7033595760006933],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"将你的个人介绍和档案放置在此处。\"]},\"1\":{\"h\":\"算法导论\"},\"2\":{\"c\":[\"算法\"]},\"3\":{\"h\":\"基础排序\"},\"4\":{\"h\":\"插入排序\",\"t\":[\"insertion_sort(A,n) for i = 2 to n key = A[i] // Insert A[i] into the sorted subarray A[1:i-1]. j = i - 1 while j > 0 and A[j] > key A[j + 1] = A[j] j = j - 1 A[j + 1] = key\"]},\"5\":{\"h\":\"选择排序\",\"t\":[\"selection_sort(A,n) for i = 1 to n - 1 // Find smallest element in A[i:n] and exchange with A[i]. smallest = i for j = i + 1 to n if A[j] < A[smallest] smallest = j exchange A[i] with A[smallest]\"]},\"6\":{\"h\":\"冒泡排序\",\"t\":[\"bubble_sort(A,n) for i = 1 to n - 1 for j = n downto i + 1 if A[j] < A[j - 1] exchange A[j] with A[j - 1]\"]},\"7\":{\"h\":\"归并排序\",\"t\":[\"merge(A,p,q,r) n_l = q - p + 1 // length of A[p:q] n_r = r - q // length of A[q+1:r] let L and R be new arrays for i = 0 to n_l - 1 // copy to L L[i] = A[p + i] for j = 0 to n_r - 1 R[j] = A[q + 1 + j] // copy to R i = 0 j = 0 k = p while i < n_l and j < n_r if L[i] ≤ R[j] A[k] = L[i] i = i + 1 else A[k] = R[j] j = j + 1 k = k + 1 while i < n_l A[k] = L[i] i = i + 1 k = k + 1 while j < n_r A[k] = R[j] j = j + 1 k = k + 1 merge_sort(A,p,r) if p ≥ r return q = (p + r) / 2 merge_sort(A,p,q) merge_sort(A,q+1,r) merge(A,p,q,r)\"]},\"8\":{\"c\":[\"算法\"]},\"9\":{\"c\":[\"排序\"]},\"10\":{\"h\":\"渐进复杂度\"},\"11\":{\"h\":\"定义\",\"t\":[\"公式\",\"O(g(n))={f(n):0≤f(n)≤cg(n)∀n≥n0​}\"]},\"12\":{\"h\":\"定义\",\"t\":[\"公式\",\"Ω(g(n))={f(n):0≤cg(n)≤f(n)∀n≥n0​}\"]},\"13\":{\"h\":\"定义\",\"t\":[\"公式\",\"Θ(g(n))={f(n):0≤c1​g(n)≤f(n)≤c2​g(n)∀n≥n0​}\"]},\"14\":{\"h\":\"定义\",\"t\":[\"公式\",\"o(g(n))={f(n):∀c∃n0​>0,0≤f(n)<cg(n)∀n≥n0​}\",\"即\",\"n→∞lim​g(n)f(n)​=0\"]},\"15\":{\"h\":\"定义\",\"t\":[\"公式\",\"ω(g(n))={f(n):∀c∃n0​>0,0≤cg(n)<f(n)∀n≥n0​}\",\"即\",\"n→∞lim​g(n)f(n)​=∞\"]},\"16\":{\"c\":[\"算法\"]},\"17\":{\"h\":\"分治\"},\"18\":{\"h\":\"矩阵相乘\",\"t\":[\"matrix_multiply(A,B,C,n) for i = 1 to n for j = 1 to n for k = 1 to n C[i][j] = C[i][j] + A[i][k] * B[k][j]\",\"时间复杂度为 Θ(n3)\"]},\"19\":{\"h\":\"矩阵相乘（分治）\",\"t\":[\"(C11​C21​​C12​C22​​)​=(A11​A21​​A12​A22​​)(B11​B21​​B12​B22​​)=(A11​⋅B11​+A12​⋅B21​A21​⋅B11​+A22​⋅B21​​A11​⋅B12​+A12​⋅B22​A21​⋅B12​+A22​⋅B22​​)​\",\"matrix_multiply_recursive(A,B,C,n) if n == 1 // Base case. C[1][1] = C[1][1] + A[1][1] * B[1][1] return // Divide. partition A,B,and C into n/2 x n/2 submatrices // Conquer. matrix_multiply_recursive(A₁₁,B₁₁,C₁₁,n/2) matrix_multiply_recursive(A₁₁,B₁₂,C₁₂,n/2) matrix_multiply_recursive(A₂₁,B₁₁,C₂₁,n/2) matrix_multiply_recursive(A₂₁,B₁₂,C₂₂,n/2) matrix_multiply_recursive(A₁₂,B₂₁,C₁₁,n/2) matrix_multiply_recursive(A₁₂,B₂₂,C₁₂,n/2) matrix_multiply_recursive(A₂₂,B₂₁,C₂₁,n/2) matrix_multiply_recursive(A₂₂,B₂₂,C₂₂,n/2)\",\"时间复杂度为\",\"T(n)=8T(n/2)+Θ(1)=Θ(n3)\"]},\"20\":{\"h\":\"矩阵相乘（Strassen）\",\"t\":[\"提示\",\"基本思想是将子问题从8次矩阵乘法减少到7次，代价是4次矩阵加法增加到18次，从而降低了总的时间复杂度\",\"时间复杂度为\",\"T(n)=7T(n/2)+Θ(n2)=Θ(nlg7)=O(n2.81)\"]},\"21\":{\"h\":\"递归时间复杂度计算方法\"},\"22\":{\"h\":\"替换法\",\"t\":[\"提示\",\"替换法主要分为两个步骤：1. 猜测 2. 使用数学归纳法进行证明\",\"下面我们使用替换法来计算以下这个递归的时间复杂度\",\"T(n)=2T(⌊n/2⌋)+Θ(n)\",\"猜测\",\"T(n)=O(nlgn)\",\"证明 当 n >= 2n₀ 时有\",\"T(n)​≤2c⌊n/2⌋lg(⌊n/2⌋)+Θ(n)≤2c(n/2)lg(n/2)+Θ(n)=cnlg(n/2)+Θ(n)=cnlgn−cn+Θ(n)≤cnlgn​\",\"只要 c 取得足够大，就能保证最后的不等式成立\"]},\"23\":{\"h\":\"递归树法\",\"t\":[\"同样使用以下这个递归来演示递归树法是如何计算时间复杂度的\",\"T(n)=3T(n/4)+Θ(n2)\"]},\"24\":{\"h\":\"主方法\",\"t\":[\"提示\",\"对于递归等式 T(n) = aT(n/b) + f(n), 其中 a > 0, b > 1 且对于任意大n满足f(n)非负，其时间复杂度计算可以根据以下情况分类\",\"如果存在ε>0使得\",\"f(n)=O(nlogb​a−ϵ)\",\"则\",\"T(n)=Θ(nlogb​a)\",\"如果存在k >= 0 使得\",\"f(n)=Θ(nlogb​algkn)\",\"则\",\"T(n)=Θ(nlogb​algk+1n)\",\"如果存在ε>0使得\",\"f(n)=Ω(nlogb​a+ϵ)\",\"并且f(n)满足 af(n/b) <= cf(n)，其中 c < 1, 则\",\"T(n)=Θ(f(n))\"]},\"25\":{\"h\":\"Akra-Bazi法\",\"t\":[\"提示\",\"Akra-Bazi是主方法的一般化形式，用于解决如下的递归等式\",\"T(n)=i=1∑k​ai​T(n/bi​)+f(n)\",\"当f(n)满足多项式成长的条件，则\",\"T(n)=Θ(np(1+∫1n​xp+1f(x)​dx))\",\"其中 p 满足\",\"i=1∑k​bip​ai​​=1\"]},\"26\":{\"c\":[\"算法\"]},\"27\":{\"c\":[\"分治\"]},\"28\":{\"h\":\"概率分析和随机化算法\"},\"29\":{\"h\":\"雇佣问题\",\"t\":[\"hire_assistant(n) best = 0 // candidate 0 is a least-qualified dummy candidate for i = 1 to n interview candidate i if candidate i is better than candidate best best = i hire candidate i\",\"最坏情况下时间复杂度为 O(ci​n+ch​n) 假定知道输入的分布情况下，通过概率分析可以计算出平均情况时间复杂度。\",\"提示\",\"对于雇佣问题，每一个申请人(编号 1 - n)都有一个排名 rank(1) - rank(n)，<rank(1), ... , rank(n)> 是列表 <1, 2, ... , n> 的一个排列；我们可以假定申请人以完全随机的顺序进来，则表示所有 n! 个排列出现的概率都相等。\"]},\"30\":{\"h\":\"指示器随机变量\",\"t\":[\"给定样本空间 S 和事件 A，指示器随机变量 I{A} 定义为\",\"I{A}={10​A occursA does not occur​\",\"引理\",\"给定样本空间 S 和事件 A，令 XA = I{A}，则有 E[XA] = Pr\"]},\"31\":{\"h\":\"示例（雇佣问题）\",\"t\":[\"令随机变量 X 表示雇佣次数，Xi 表示第 i 个申请人是否雇佣，即\",\"Xi​​=I{candidate i is hired}={10​if candidate i is hiredif candidate i is not hired​​\",\"则有\",\"E[X]​=E[i=1∑n​Xi​]=i=1∑n​E[Xi​]=i=1∑n​i1​=lnn+O(1)​\"]},\"32\":{\"h\":\"示例（逆序对的期望数）\",\"t\":[\"将期望分解为每一个具体的事件：共有 C(n,2) 对数，每对数为逆序对的概率是 1/2. (单个事件的期望是 1/2). 那么总得期望就是：C(n,2) * 1/2 = n(n-1)/4\"]},\"33\":{\"h\":\"随机化算法\",\"t\":[\"提示\",\"很多情况下，我们并不知道输入的分布情况或者无法对输入的分布进行建模，这时候就可以使用随机化算法。例如，对于雇佣问题我们不按照给定的1 - n 顺序来面试，而是每次都随机选择一个申请人来面试。\",\"randomized_hire_assistant(n) randomly permute the list of candidates hire_assistant(n)\",\"综上，随机化算法的行为不仅取决于输入，还取决于随机数生成器所产生的结果；一般使用期望运行时间来描述随机化算法运行复杂度。\",\"随机排列数组\",\"randomly_permute(A,n) for i = 1 to n swap A[i] with A[RANDOM(i,n)]\",\"接下来使用数学归纳法证明该算法可以产生随机的排列分布\",\"假设： 经过 k 次循环之后，对于 n 个元素中的任一 k 排列，A[1:k] 是该排列的概率都相等, 等于 (n - k)! / n! 推导： 经过 k+1 次循环之后，记数组 A 中前 k+1 个元素为 <x1,x2,...,xk+1>，令 E1 表示经过前面 k 次循环之后数组 A 中前 k 个元素正好为 <x1,x2,...,xk>，根据假设有\",\"P{E1​}=n!(n−k)!​\",\"令 E2 表示第 k+1 次循环中选择 xk+1 放入 A[k+1] 中，则 E = E1∩E2 表示数组 A 中前 k+1 个元素正好为 <x1,x2,...,xk+1>，其概率为\",\"P{E}​=P{E1​∩E2​}=P{E2​∣E1​}P{E1​}=n−k1​⋅n!(n−k)!​=n!(n−k−1)!​​\",\"初始： 当 k = 1 时，令 E 表示 A[1] = x1，则 P{E} = 1/n = (n - 1)! / n! 成立终止： 经过 n 次循环之后，数组 A 的任一 n 排列的概率为 (n - n)! / n! = 1 / n!\"]},\"34\":{\"h\":\"概率分析示例\"},\"35\":{\"h\":\"生日悖论\",\"t\":[\"问题\",\"期望多少人情况下，有 2 个人生日相同？\",\"解： 令 Xij 表示 (i,j) 两人生日相同，有 E[Xij] = 1/n\",\"Xij​​=I{person i and j have the same birthday}={10​if person i and j have the same birthdayotherwise​​\",\"令 X 表示有多少对生日相同，则\",\"E[X]​=E[i=1∑k−1​j=i+1∑k​Xij​]=i=1∑k−1​j=i+1∑k​E[Xij​]=(k2​)n1​=2nk(k−1)​​\",\"假设 n = 365 天，当 k(k-1) >= 2n 时，即 k = 28 人时，至少有一对生日相同\"]},\"36\":{\"h\":\"球与桶\",\"t\":[\"有 b 个相同的桶 <1, 2, ..., b>，随机将 n 个球投入桶中，投进每个桶中的概率都相等为 1/b，这一问题模型对于分析哈希算法特别有用\",\"问题 1\",\"每一个桶中期望会有多少个球 ?s\",\"解： 令 Xi 表示第 i 个球进入指定的桶中，有 E[Xi] = 1 / b\",\"Xi​​=I{第 i 球进入指定的桶中}={10​第 i 球进入指定的桶中otherwise​​\",\"令 X 表示有多少球进入指定的桶中，则\",\"E[X]​=E[i=1∑n​Xi​]=i=1∑n​E[Xi​]=n/b​\",\"问题 2\",\"平均期望需要投多少个球，才能使得指定的桶中至少有1个球？\",\"解： 令 X 表示需要投多少球才能成功投进指定的桶，每次成功投进的概率为 p = 1 / b，失败概率为 q = (b -1）/ b，则 P{X=k} = qk-1p 符合几何分布，因此 E[X] = 1 / p = b\",\"问题 3\",\"平均期望需要投多少个球，才能使得每个桶中都至少有1个球？\",\"解： 可以将整个投球过程分为 b 个阶段，每一个阶段都会持续到投入一个空的桶中为止。令 Xi 表示第 i 个阶段中需要投多少球才能投进空的桶中，则 Xi 也符合几何分布且概率 p = (b - i + 1) / b，又令 X = X1 + ... + Xb 表示需要投多少球才能使得每个桶中都至少有 1 个球，则\",\"E[X]​=E[i=1∑b​Xi​]=i=1∑b​E[Xi​]=i=1∑b​b−i+1b​=bi=1∑b​i1​=b(lnb+O(1))​\"]},\"37\":{\"c\":[\"算法\"]},\"38\":{\"c\":[\"概率\",\"随机化算法\"]},\"39\":{\"h\":\"堆排序\"},\"40\":{\"h\":\"堆\",\"t\":[\"（最大堆）\",\"PARENT(i) return i/2 LEFT(i) return 2i RIGHT(i) return 2i+1\"]},\"41\":{\"h\":\"维持堆的性质\",\"t\":[\"max_heapify(A,i) l = LEFT(i) r = RIGHT(i) if l ≤ A.heap-size and A[l] > A[i] largest = l else largest = i if r ≤ A.heap-size and A[r] > A[largest] largest = r if largest ≠ i exchange A[i] with A[largest] max_heapify(A,largest)\",\"时间复杂度为 T(n) ≤ T(2n/3)+Θ(1) 根据主方法定理第二种情况可得 T(n) = O(lgn)\"]},\"42\":{\"h\":\"构造堆\",\"t\":[\"build_max_heap(A,n) A.heap-size = n for i = n/2 downto 1 max_heapify(A,i)\"]},\"43\":{\"h\":\"时间复杂度\",\"t\":[\"含有 n 个元素的堆的高度 ⌊n/2⌋，并且在任一高度 h 最多有 ⌈n/2h+1⌉ 个结点，则有\",\"T(n)​=h=0∑⌊lgn⌋​⌈2h+1n​⌉ch≤h=0∑⌊lgn⌋​2hn​ch=cnh=0∑⌊lgn⌋​2hh​≤cnh=0∑∞​2hh​≤cn⋅(1−1/2)21/2​=O(n)​\"]},\"44\":{\"h\":\"堆排序\",\"t\":[\"heapsort(A,n) build_max_heap(A,n) for i = n downto 2 exchange A[1] with A[i] A.heap-size = A.heap-size - 1 max_heapify(A,1)\",\"时间复杂度为 O(nlgn)\"]},\"45\":{\"h\":\"优先级队列\",\"t\":[\"max_heap_maximum(A) if A.heap-size < 1 return \\\"heap underflow\\\" return A[1] max_heap_extract_max(A) max = max_heap_maximum(A) A[1] = A[A.heap-size] A.heap-size = A.heap-size - 1 max_heapify(A,1) return max max_heap_increase_key(A,x,k) if k < x.key error \\\"new key is smaller than current key\\\" x.key = k // find the index i where A[i] = x while i > 1 and A[PARENT(i)].key < A[i].key exchange A[i] with A[PARENT(i)] i = PARENT(i) max_heap_insert(A,x,n) if A.heap-size == n error \\\"heap overflow\\\" A.heap-size = A.heap-size + 1 k = x.key x.key = -∞ A[A.heap-size] = x max_heap_increase_key(A,x,k)\"]},\"46\":{\"c\":[\"算法\"]},\"47\":{\"c\":[\"堆排序\",\"优先级队列\"]},\"48\":{\"h\":\"主要功能与配置演示\"},\"49\":{\"c\":[\"使用指南\"]},\"50\":{\"h\":\"布局与功能禁用\",\"t\":[\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\",\"本页面就是一个示例，禁用了如下功能:\",\"导航栏\",\"侧边栏\",\"路径导航\",\"页面信息\",\"贡献者\",\"编辑此页链接\",\"更新时间\",\"上一篇/下一篇 链接\",\"评论\",\"页脚\",\"返回顶部按钮\"]},\"51\":{\"c\":[\"使用指南\"]},\"52\":{\"c\":[\"禁用\"]},\"53\":{\"h\":\"布局\",\"t\":[\"布局包括:\",\"导航栏\",\"侧边栏\",\"页脚\",\"同时每个页面包含:\",\"路径导航\",\"标题和页面信息\",\"TOC (文章标题列表)\",\"贡献者、更新时间等页面元信息\",\"评论\",\"主题也带有以下元素:\",\"夜间模式按钮\",\"返回顶部按钮\",\"打印按钮\",\"你可以在主题选项和页面的 frontmatter 中自定义它们。\"]},\"54\":{\"c\":[\"指南\"]},\"55\":{\"c\":[\"布局\"]},\"56\":{\"h\":\"Markdown 展示\",\"t\":[\"VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。\",\"你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。\"]},\"57\":{\"h\":\"Markdown 介绍\",\"t\":[\"如果你是一个新手，还不会编写 Markdown，请先阅读 Markdown 介绍 和 Markdown 演示。\"]},\"58\":{\"h\":\"Markdown 配置\",\"t\":[\"VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。\",\"Frontmatter\",\"Frontmatter 是 VuePress 中很重要的一个概念，请阅读 Frontmatter 介绍 了解详情。\"]},\"59\":{\"h\":\"Markdown 扩展\",\"t\":[\"VuePress 会使用 markdown-it 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 语法扩展 。\"]},\"60\":{\"h\":\"VuePress 扩展\",\"t\":[\"为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。\",\"关于这些扩展，请阅读 VuePress 中的 Markdown 扩展。\"]},\"61\":{\"h\":\"主题扩展\",\"t\":[\"通过 VuePress 插件，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。\"]},\"62\":{\"h\":\"选项卡\",\"t\":[\"查看详情\"]},\"63\":{\"h\":\"脚注\",\"t\":[\"此文字有脚注[1].\",\"查看详情\"]},\"64\":{\"h\":\"导入文件\",\"t\":[\"查看详情\"]},\"65\":{\"h\":\"TeX 语法\",\"t\":[\"∂ωr∂r​(ωyω​)=(ωyω​){(logy)r+i=1∑r​ωi(−1)ir⋯(r−i+1)(logy)r−i​}\",\"查看详情\"]},\"66\":{\"h\":\"任务列表\",\"t\":[\" 计划 1\",\" 计划 2\",\"查看详情\"]},\"67\":{\"h\":\"图片增强\",\"t\":[\"支持为图片设置颜色模式和大小。\",\"查看详情\"]},\"68\":{\"h\":\"上下角标\",\"t\":[\"19th H2O\",\"查看详情\"]},\"69\":{\"h\":\"组件\"},\"70\":{\"c\":[\"使用指南\"]},\"71\":{\"c\":[\"Markdown\"]},\"72\":{\"h\":\"页面配置\",\"t\":[\"more 注释之前的内容被视为文章摘要。\"]},\"73\":{\"h\":\"页面标题\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"Markdown 中的第一个 H1 标题会被视为页面标题。\",\"你可以在 Markdown 的 Frontmatter 中设置页面标题。\",\"--- title: 页面标题 ---\"]},\"74\":{\"h\":\"页面信息\",\"t\":[\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\",\"作者设置为 Ms.Hope。\",\"写作日期为 2020 年 1 月 1 日\",\"分类为 “使用指南”\",\"标签为 “页面配置” 和 “使用指南”\"]},\"75\":{\"h\":\"页面内容\",\"t\":[\"你可以自由在这里书写你的 Markdown。\",\"图片引入\",\"你可以将图片和 Markdown 文件放置在一起使用相对路径进行引用。\",\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"]},\"76\":{\"h\":\"组件\",\"t\":[\"每个 Markdown 页面都会被转换为一个 Vue 组件，这意味着你可以在 Markdown 中使用 Vue 语法：\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"你也可以创建并引入你自己的组件。\"]},\"77\":{\"c\":[\"使用指南\"]},\"78\":{\"c\":[\"页面配置\",\"使用指南\"]},\"79\":{\"h\":\"实时渲染\"},\"80\":{\"c\":[\"实时渲染\"]},\"81\":{\"h\":\"光栅化\"},\"82\":{\"h\":\"光栅化三角形\",\"t\":[\"提示\",\"采样判断每一个像素的中心是否在三角形内\",\"for (int x = xmin; x < xmax; ++x) for (int y = ymin; y < ymax; ++y) image[x][y] = inside(tri, x + 0.5, y + 0.5);\",\"如何判断点在三角形内？\",\"(ac×ab)⋅(ac×aq​)>0\",\"同理有\",\"(cb×ca)⋅(cb×cq​)>0(ba×bc)⋅(ba×bq​)>0​\",\"警告\",\"下面是一个种更简单的判断方法，不过三角形的顶点 A → B → C 必须是逆时针顺序（左右手坐标系都适用）！\",\"[ab×aq​]z​>0[bc×bq​]z​>0[ca×cq​]z​>0​\"]},\"83\":{\"h\":\"重心坐标计算\",\"t\":[\"假设 P 是三角形 ABC 内一点，有\",\"xp​yp​1​=αxa​+βxb​+γxc​=αya​+βyb​+γyc​=α+β+γ​\",\"可得\",\"αβγ​=(xa​−xc​)(yb​−yc​)−(xb​−xc​)(ya​−yc​)(xp​−xc​)(yb​−yc​)−(xb​−xc​)(yp​−yc​)​=(xb​−xc​)(ya​−yc​)−(xa​−xc​)(yb​−yc​)(xp​−xc​)(ya​−yc​)−(xa​−xc​)(yp​−yc​)​=1−α−β​\"]},\"84\":{\"h\":\"透视正确插值\",\"t\":[\"三角形 ABC 根据透视投影矩阵 M 变换到 A'B'C'\",\"(A′wa​wa​​)(B′wb​wb​​)(C′wc​wc​​)(P′wp​wp​​)​=M(A1​)=M(B1​)=M(C1​)=M(P1​)​\",\"P 和 P' 分别是三角形 ABC 和 A'B'C' 内的一点，有\",\"PP′​=αA+βB+γC=α′A′+β′B′+γ′C′​\",\"且\",\"α+β+γα′+β′+γ′​=1=1​\",\"结合 1 和 2 可得\",\"(P1​)M(P1​)P′wp​wp​​=α(A1​)+β(B1​)+γ(C1​)=Mα(A1​)+Mβ(B1​)+Mγ(C1​)=αA′wa​+βB′wb​+γC′wc​=αwa​+βwb​+γwc​​\",\"则\",\"P′​=αwa​+βwb​+γwc​αA′wa​+βB′wb​+γC′wc​​=αwa​+βwb​+γwc​αwa​​A′+αwa​+βwb​+γwc​βwb​​B′+αwa​+βwb​+γwc​γwc​​C′=α′A′+β′B′+γ′C′​\",\"从而有\",\"α′β′γ′​=αwa​+βwb​+γwc​αwa​​=αwa​+βwb​+γwc​βwb​​=αwa​+βwb​+γwc​γwc​​​\",\"令\",\"k=αwa​+βwb​+γwc​1​\",\"可得\",\"αβγ​=wa​kα′​=wb​kβ′​=wc​kγ′​​\",\"又\",\"1=α+β+γ=wa​kα′​+wb​kβ′​+wc​kγ′​\",\"可得\",\"kαβγ​=wa​α′​+wb​β′​+wc​γ′​=wa​α′​+wb​β′​+wc​γ′​wa​α′​​=wa​α′​+wb​β′​+wc​γ′​wb​β′​​=wa​α′​+wb​β′​+wc​γ′​wc​γ′​​​\"]},\"85\":{\"c\":[\"实时渲染\"]},\"86\":{\"c\":[\"光栅化\"]},\"87\":{\"h\":\"坐标变换\"},\"88\":{\"h\":\"线性代数基础\",\"t\":[\"任意 n 阶段矩阵 M 可以看成由 n 个列向量 c1 c2 ... cn 组成：\",\"M=[c1​​c2​​...​cn​​]\",\"将这 n 个列向量进行线性变换后所能表示的向量记为 v 有：\",\"v=k1​c1​+k2​c2​+...+kn​cn​\",\"所有 v 构成的向量空间记为 R\",\"相关信息\"]},\"89\":{\"h\":\"秩\",\"t\":[\"表示由矩阵的列向量所能构成的向量所组成的向量空间 R 的维度\"]},\"90\":{\"h\":\"行列式\",\"t\":[\"表示该矩阵对空间进行变换的缩放程度，例如，2 阶矩阵表示面积的缩放，3 阶矩阵表示体积的缩放 如果行列式为 0，表示该矩阵变换进行了降维操作(即秩⬇)，因此此时矩阵不可逆 如果行列式 < 0，表示该矩阵变换进行了翻转操作\"]},\"91\":{\"h\":\"基本变换\",\"t\":[\"线性变换定义\",\"f(x)+f(y)kf(x)​=f(x+y)=f(kx)​\",\"对于任意矩阵 M 以及向量 x y 满足： Mx + My = M(x+y) kM(x) = M(kx) 因此 M 也满足线性变换\"]},\"92\":{\"h\":\"平移\",\"t\":[\"T(t)=T(tx​,ty​,tz​)=​1000​0100​0010​tx​ty​tz​1​​\"]},\"93\":{\"h\":\"旋转\",\"t\":[\"Rx​(ϕ)=​1000​0cosϕsinϕ0​0−sinϕcosϕ0​0001​​\",\"Ry​(ϕ)=​cosϕ0−sinϕ0​0100​sinϕ0cosϕ0​0001​​\",\"Rz​(ϕ)=​cosϕsinϕ00​−sinϕcosϕ00​0010​0001​​\",\"定理\",\"任意 3x3 旋转矩阵都是标准正交矩阵，且行列式等于 1\"]},\"94\":{\"h\":\"推导\",\"t\":[\"给定由一组标准正交基所组成的矩阵 A 以及任意 3x3 旋转矩阵 R，其旋转之后仍然是一组标准正交基，可得：\",\"(RA)(RA)T=RAATRT=RRT=I\"]},\"95\":{\"h\":\"缩放\",\"t\":[\"S(s)=​sx​000​0sy​00​00sz​0​0001​​\"]},\"96\":{\"h\":\"剪切\",\"t\":[\"Hxz​(s)=​1000​0100​s010​0001​​\"]},\"97\":{\"h\":\"视图变换\",\"t\":[\"如图，假定相机位置在 c，单位向量 r，u，v 表示相机的旋转朝向\",\"提示\",\"由于相机和物体之间的相对位置是固定不变的，我们可以先对整体一起进行矩阵变换，使得相机位于原点且朝向从 <r，u，v> 变换为 <x，y，z> （当然也可以变换为 x，y，-z）\",\"先将相机平移到原点\",\"Tview​=​1000​0100​0010​−tx​−ty​−tz​1​​\",\"将朝向从 <r，u，v> 变换为 <x，y，z>\",\"提示\",\"可以单独考虑每个向量，我们希望通过一个旋转矩阵变换将 r → x（<1,0,0>）, u → y（<0,1,0>）, v → z（<0,0,1>），因为 r，u，v 是标准正交向量，所以 r·r = u·u = v·v = 1，且两两之间的点积为 0\",\"综上，可以推导出对应的旋转矩阵\",\"Rview​=​rTuTvT0​0001​​=​rx​ux​vx​0​ry​uy​vy​0​rz​uz​vz​0​0001​​\",\"视图变换矩阵\",\"Mview​=Rview​Tview​​=​rx​ux​vx​0​ry​uy​vy​0​rz​uz​vz​0​0001​​​1000​0100​0010​−tx​−ty​−tz​1​​=​rx​ux​vx​0​ry​uy​vy​0​rz​uz​vz​0​−t⋅r−t⋅u−t⋅v1​​​\"]},\"98\":{\"h\":\"投影矩阵\"},\"99\":{\"h\":\"正交投影\",\"t\":[\"提示\",\"正交投影的目标是将由（l,r,b,t,n,f）所表示的 AABB 变换到以原点为中心的标准 AABB，在 OpenGL 中标准 AABB 为 (-1,-1,-1) - (1,1,1)，在 DirectX 中标准 AABB 为 (-1,-1,0) - (1,1,1)\",\"注意\",\"上图中相机看向 -z 的方向，因此有 0 > n > f； 如果相机看向 +z 的方向，那么 0 < n < f，并且投影矩阵公式也会有所不同，以下公式推导基于相机看向 +z 方向\"]},\"100\":{\"h\":\"OpenGL\",\"t\":[\"Po[−1,1]​=S(s)T(t)​=​r−l2​000​0t−b2​00​00f−n2​0​0001​​​1000​0100​0010​−2l+r​−2b+t​−2n+f​1​​=​r−l2​000​0t−b2​00​00f−n2​0​l−rl+r​b−tb+t​n−fn+f​1​​​\"]},\"101\":{\"h\":\"DirectX\",\"t\":[\"Po[0,1]​=Mst​Po[−1,1]​​=​1000​0100​000.50​000.51​​​r−l2​000​0t−b2​00​00f−n2​0​l−rl+r​b−tb+t​n−fn+f​1​​=​r−l2​000​0t−b2​00​00f−n1​0​l−rl+r​b−tb+t​n−fn​1​​​\"]},\"102\":{\"h\":\"透视投影\",\"t\":[\"提示\",\"透视投影的目标是将由（l,r,b,t,n,f）所表示的视锥体变换到以原点为中心的标准 AABB，在 OpenGL 中标准 AABB 为 (-1,-1,-1) - (1,1,1)，在 DirectX 中标准 AABB 为 (-1,-1,0) - (1,1,1)\",\"注意\",\"上图中相机看向 -z 的方向，因此有 0 > n > f； 如果相机看向 +z 的方向，那么 0 < n < f，并且投影矩阵公式也会有所不同，以下公式推导基于相机看向 -z 方向\",\"直接计算这个变化有困难，可以考虑分成两步\",\"第一步\",\"将由（l,r,b,t,n,f）所表示的视锥体变换到由（l,r,b,t,n,f）所表示的 AABB，即把视锥体往中间压缩成一个长方体，且保持近平面和远平面的距离不变\"]},\"103\":{\"c\":[\"实时渲染\"]},\"104\":{\"c\":[\"坐标变换\"]},\"105\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"直接计算这个变化有困难\",{\"1\":{\"102\":1}}],[\"透视投影的目标是将由\",{\"1\":{\"102\":1}}],[\"透视投影\",{\"0\":{\"102\":1}}],[\"透视正确插值\",{\"0\":{\"84\":1}}],[\"方向\",{\"1\":{\"99\":1,\"102\":1}}],[\"那么\",{\"1\":{\"99\":1,\"102\":1}}],[\"那么总得期望就是\",{\"1\":{\"32\":1}}],[\"注意\",{\"1\":{\"99\":1,\"102\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"72\":1}}],[\"在\",{\"1\":{\"99\":2,\"102\":2}}],[\"在页面禁用功能与布局\",{\"1\":{\"50\":1}}],[\"正交投影的目标是将由\",{\"1\":{\"99\":1}}],[\"正交投影\",{\"0\":{\"99\":1}}],[\"投影矩阵\",{\"0\":{\"98\":1}}],[\"投进每个桶中的概率都相等为\",{\"1\":{\"36\":1}}],[\"所表示的视锥体变换到由\",{\"1\":{\"102\":1}}],[\"所表示的视锥体变换到以原点为中心的标准\",{\"1\":{\"102\":1}}],[\"所表示的\",{\"1\":{\"99\":1,\"102\":1}}],[\"所以\",{\"1\":{\"97\":1}}],[\"所有\",{\"1\":{\"88\":1}}],[\"因为\",{\"1\":{\"97\":1}}],[\"因此有\",{\"1\":{\"99\":1,\"102\":1}}],[\"因此此时矩阵不可逆\",{\"1\":{\"90\":1}}],[\"因此可以借助于\",{\"1\":{\"59\":1}}],[\"因此\",{\"1\":{\"36\":1,\"56\":1,\"91\":1}}],[\"先将相机平移到原点\",{\"1\":{\"97\":1}}],[\"z\",{\"1\":{\"97\":2,\"99\":1,\"102\":2}}],[\"z>\",{\"1\":{\"97\":2}}],[\"z​>0​\",{\"1\":{\"82\":1}}],[\"z​>0\",{\"1\":{\"82\":2}}],[\"变换为\",{\"1\":{\"97\":2}}],[\"变换到以原点为中心的标准\",{\"1\":{\"99\":1}}],[\"变换到\",{\"1\":{\"84\":1}}],[\"由于相机和物体之间的相对位置是固定不变的\",{\"1\":{\"97\":1}}],[\"u\",{\"1\":{\"97\":7}}],[\"underflow\",{\"1\":{\"45\":1}}],[\"单位向量\",{\"1\":{\"97\":1}}],[\"单个事件的期望是\",{\"1\":{\"32\":1}}],[\"视图变换矩阵\",{\"1\":{\"97\":1}}],[\"视图变换\",{\"0\":{\"97\":1}}],[\"剪切\",{\"0\":{\"96\":1}}],[\"缩放\",{\"0\":{\"95\":1}}],[\"给定由一组标准正交基所组成的矩阵\",{\"1\":{\"94\":1}}],[\"给定样本空间\",{\"1\":{\"30\":2}}],[\"定理\",{\"1\":{\"93\":1}}],[\"定义为\",{\"1\":{\"30\":1}}],[\"定义\",{\"0\":{\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1}}],[\"ϕ\",{\"1\":{\"93\":3}}],[\"旋转矩阵\",{\"1\":{\"94\":1}}],[\"旋转矩阵都是标准正交矩阵\",{\"1\":{\"93\":1}}],[\"旋转\",{\"0\":{\"93\":1}}],[\"平移\",{\"0\":{\"92\":1}}],[\"平均期望需要投多少个球\",{\"1\":{\"36\":2}}],[\"也满足线性变换\",{\"1\":{\"91\":1}}],[\"也符合几何分布且概率\",{\"1\":{\"36\":1}}],[\"以下公式推导基于相机看向\",{\"1\":{\"99\":1,\"102\":1}}],[\"以及任意\",{\"1\":{\"94\":1}}],[\"以及向量\",{\"1\":{\"91\":1}}],[\"以便\",{\"1\":{\"56\":1}}],[\"线性变换定义\",{\"1\":{\"91\":1}}],[\"线性代数基础\",{\"0\":{\"88\":1}}],[\"阶矩阵表示体积的缩放\",{\"1\":{\"90\":1}}],[\"阶矩阵表示面积的缩放\",{\"1\":{\"90\":1}}],[\"阶段矩阵\",{\"1\":{\"88\":1}}],[\"行列式\",{\"0\":{\"90\":1}}],[\"秩\",{\"0\":{\"89\":1}}],[\"相关信息\",{\"1\":{\"88\":1}}],[\"构成的向量空间记为\",{\"1\":{\"88\":1}}],[\"构造堆\",{\"0\":{\"42\":1}}],[\"v>\",{\"1\":{\"97\":2}}],[\"v=k1​c1​+k2​c2​+\",{\"1\":{\"88\":1}}],[\"v\",{\"1\":{\"88\":2,\"97\":5}}],[\"vue\",{\"1\":{\"76\":2}}],[\"vuepress\",{\"0\":{\"60\":1},\"1\":{\"56\":2,\"58\":2,\"59\":1,\"60\":2,\"61\":1,\"75\":1}}],[\"组成\",{\"1\":{\"88\":1}}],[\"组件\",{\"0\":{\"69\":1,\"76\":1},\"1\":{\"76\":1}}],[\"任意\",{\"1\":{\"88\":1,\"93\":1}}],[\"任务列表\",{\"0\":{\"66\":1}}],[\"坐标变换\",{\"0\":{\"87\":1},\"2\":{\"104\":1}}],[\"又\",{\"1\":{\"84\":1}}],[\"又令\",{\"1\":{\"36\":1}}],[\"γ\",{\"1\":{\"84\":1}}],[\"β\",{\"1\":{\"84\":1}}],[\"从而有\",{\"1\":{\"84\":1}}],[\"从而降低了总的时间复杂度\",{\"1\":{\"20\":1}}],[\"结合\",{\"1\":{\"84\":1}}],[\"α\",{\"1\":{\"84\":1}}],[\"α+β+γα\",{\"1\":{\"84\":1}}],[\"αβγ​=wa​kα\",{\"1\":{\"84\":1}}],[\"αβγ​=\",{\"1\":{\"83\":1}}],[\"且保持近平面和远平面的距离不变\",{\"1\":{\"102\":1}}],[\"且两两之间的点积为\",{\"1\":{\"97\":1}}],[\"且行列式等于\",{\"1\":{\"93\":1}}],[\"且\",{\"1\":{\"84\":1}}],[\"且对于任意大n满足f\",{\"1\":{\"24\":1}}],[\"三角形\",{\"1\":{\"84\":1}}],[\"−\",{\"1\":{\"83\":4}}],[\"−1\",{\"1\":{\"65\":1,\"100\":1,\"101\":1}}],[\"可得\",{\"1\":{\"83\":1,\"84\":3,\"94\":1}}],[\"可以考虑分成两步\",{\"1\":{\"102\":1}}],[\"可以推导出对应的旋转矩阵\",{\"1\":{\"97\":1}}],[\"可以单独考虑每个向量\",{\"1\":{\"97\":1}}],[\"可以看成由\",{\"1\":{\"88\":1}}],[\"可以根据文件结构将它们转换为不同的页面\",{\"1\":{\"56\":1}}],[\"可以将整个投球过程分为\",{\"1\":{\"36\":1}}],[\"内的一点\",{\"1\":{\"84\":1}}],[\"内一点\",{\"1\":{\"83\":1}}],[\"内容\",{\"1\":{\"59\":1}}],[\"重心坐标计算\",{\"0\":{\"83\":1}}],[\"左右手坐标系都适用\",{\"1\":{\"82\":1}}],[\"必须是逆时针顺序\",{\"1\":{\"82\":1}}],[\"→\",{\"1\":{\"82\":2,\"97\":3}}],[\"不过三角形的顶点\",{\"1\":{\"82\":1}}],[\"警告\",{\"1\":{\"82\":1}}],[\"⋅\",{\"1\":{\"82\":3}}],[\"如图\",{\"1\":{\"97\":1}}],[\"如何判断点在三角形内\",{\"1\":{\"82\":1}}],[\"如果相机看向\",{\"1\":{\"99\":1,\"102\":1}}],[\"如果行列式\",{\"1\":{\"90\":1}}],[\"如果行列式为\",{\"1\":{\"90\":1}}],[\"如果你是一个新手\",{\"1\":{\"57\":1}}],[\"如果存在k\",{\"1\":{\"24\":1}}],[\"如果存在ε>0使得\",{\"1\":{\"24\":2}}],[\"51​​​r−l2​000​0t−b2​00​00f−n2​0​l−rl+r​b−tb+t​n−fn+f​1​​=​r−l2​000​0t−b2​00​00f−n1​0​l−rl+r​b−tb+t​n−fn​1​​​\",{\"1\":{\"101\":1}}],[\"50​000\",{\"1\":{\"101\":1}}],[\"5\",{\"1\":{\"82\":2}}],[\"yp​−yc​\",{\"1\":{\"83\":2}}],[\"ya​−yc​\",{\"1\":{\"83\":3}}],[\"yb​−yc​\",{\"1\":{\"83\":3}}],[\"ymax\",{\"1\":{\"82\":1}}],[\"ymin\",{\"1\":{\"82\":1}}],[\"y\",{\"1\":{\"82\":4,\"91\":2,\"97\":4}}],[\"采样判断每一个像素的中心是否在三角形内\",{\"1\":{\"82\":1}}],[\"光栅化三角形\",{\"0\":{\"82\":1}}],[\"光栅化\",{\"0\":{\"81\":1},\"2\":{\"86\":1}}],[\"实时渲染\",{\"0\":{\"79\":1},\"2\":{\"80\":1,\"85\":1,\"103\":1}}],[\"进行引用\",{\"1\":{\"75\":1}}],[\"图片引入\",{\"1\":{\"75\":1}}],[\"图片增强\",{\"0\":{\"67\":1}}],[\"标签为\",{\"1\":{\"74\":1}}],[\"标题会被视为页面标题\",{\"1\":{\"73\":1}}],[\"标题和页面信息\",{\"1\":{\"53\":1}}],[\"分别是三角形\",{\"1\":{\"84\":1}}],[\"分类为\",{\"1\":{\"74\":1}}],[\"分治\",{\"0\":{\"17\":1,\"19\":1},\"2\":{\"27\":1}}],[\"日\",{\"1\":{\"74\":1}}],[\"月\",{\"1\":{\"74\":1}}],[\"年\",{\"1\":{\"74\":1}}],[\"写作日期为\",{\"1\":{\"74\":1}}],[\"作者设置为\",{\"1\":{\"74\":1}}],[\"上图中相机看向\",{\"1\":{\"99\":1,\"102\":1}}],[\"上下角标\",{\"0\":{\"68\":1}}],[\"上一篇\",{\"1\":{\"50\":1}}],[\"支持为图片设置颜色模式和大小\",{\"1\":{\"67\":1}}],[\"计划\",{\"1\":{\"66\":2}}],[\"∂ωr∂r​\",{\"1\":{\"65\":1}}],[\"导入文件\",{\"0\":{\"64\":1}}],[\"导航栏\",{\"1\":{\"50\":1,\"53\":1}}],[\"此文字有脚注\",{\"1\":{\"63\":1}}],[\"脚注\",{\"0\":{\"63\":1}}],[\"查看详情\",{\"1\":{\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1}}],[\"选项卡\",{\"0\":{\"62\":1}}],[\"选择排序\",{\"0\":{\"5\":1}}],[\"提供更加丰富的写作功能\",{\"1\":{\"61\":1}}],[\"提示\",{\"1\":{\"20\":1,\"22\":1,\"24\":1,\"25\":1,\"29\":1,\"33\":1,\"82\":1,\"97\":2,\"99\":1,\"102\":1}}],[\"关于这些扩展\",{\"1\":{\"60\":1}}],[\"语法\",{\"0\":{\"65\":1},\"1\":{\"61\":1,\"76\":1}}],[\"语法进行了扩展\",{\"1\":{\"60\":1}}],[\"语法扩展\",{\"1\":{\"59\":1}}],[\"为\",{\"1\":{\"99\":2,\"102\":2}}],[\"为了丰富文档写作\",{\"1\":{\"60\":1}}],[\"为每个\",{\"1\":{\"58\":1}}],[\"插件\",{\"1\":{\"61\":1}}],[\"插件来实现\",{\"1\":{\"59\":1}}],[\"插入排序\",{\"0\":{\"4\":1}}],[\"来解析\",{\"1\":{\"59\":1}}],[\"会使用\",{\"1\":{\"59\":1}}],[\"扩展\",{\"0\":{\"59\":1,\"60\":1},\"1\":{\"60\":1}}],[\"了解详情\",{\"1\":{\"58\":1}}],[\"请使用绝对链接\",{\"1\":{\"75\":1}}],[\"请阅读\",{\"1\":{\"58\":1,\"60\":1}}],[\"请先阅读\",{\"1\":{\"57\":1}}],[\"通过\",{\"1\":{\"58\":1,\"61\":1}}],[\"通过概率分析可以计算出平均情况时间复杂度\",{\"1\":{\"29\":1}}],[\"配置\",{\"0\":{\"58\":1}}],[\"演示\",{\"1\":{\"57\":1}}],[\"和\",{\"1\":{\"57\":1,\"74\":1,\"84\":3}}],[\"和事件\",{\"1\":{\"30\":2}}],[\"还不会编写\",{\"1\":{\"57\":1}}],[\"还取决于随机数生成器所产生的结果\",{\"1\":{\"33\":1}}],[\"介绍\",{\"0\":{\"57\":1},\"1\":{\"57\":1,\"58\":1}}],[\"介绍页\",{\"0\":{\"0\":1}}],[\"你也可以创建并引入你自己的组件\",{\"1\":{\"76\":1}}],[\"你需要创建并编写\",{\"1\":{\"56\":1}}],[\"你可以将图片和\",{\"1\":{\"75\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"75\":1}}],[\"你可以在\",{\"1\":{\"73\":1,\"74\":1}}],[\"你可以在主题选项和页面的\",{\"1\":{\"53\":1}}],[\"你可以使用它轻松生成文档或博客站点\",{\"1\":{\"56\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"50\":1}}],[\"文件夹的图片\",{\"1\":{\"75\":1}}],[\"文件放置在一起使用相对路径进行引用\",{\"1\":{\"75\":1}}],[\"文件生成页面\",{\"1\":{\"56\":1}}],[\"文章标题列表\",{\"1\":{\"53\":1}}],[\"展示\",{\"0\":{\"56\":1}}],[\"指南\",{\"2\":{\"54\":1}}],[\"指示器随机变量\",{\"0\":{\"30\":1},\"1\":{\"30\":1}}],[\"打印按钮\",{\"1\":{\"53\":1}}],[\"夜间模式按钮\",{\"1\":{\"53\":1}}],[\"同理有\",{\"1\":{\"82\":1}}],[\"同时每个页面包含\",{\"1\":{\"53\":1}}],[\"同样使用以下这个递归来演示递归树法是如何计算时间复杂度的\",{\"1\":{\"23\":1}}],[\"布局包括\",{\"1\":{\"53\":1}}],[\"布局\",{\"0\":{\"53\":1},\"2\":{\"55\":1}}],[\"布局与功能禁用\",{\"0\":{\"50\":1}}],[\"禁用\",{\"2\":{\"52\":1}}],[\"禁用了如下功能\",{\"1\":{\"50\":1}}],[\"返回顶部按钮\",{\"1\":{\"50\":1,\"53\":1}}],[\"页面都会被转换为一个\",{\"1\":{\"76\":1}}],[\"页面内容\",{\"0\":{\"75\":1}}],[\"页面标题\",{\"0\":{\"73\":1},\"1\":{\"73\":1}}],[\"页面配置\",{\"0\":{\"72\":1},\"1\":{\"74\":1},\"2\":{\"78\":1}}],[\"页面引入配置\",{\"1\":{\"58\":1}}],[\"页面信息\",{\"0\":{\"74\":1},\"1\":{\"50\":1}}],[\"页脚\",{\"1\":{\"50\":1,\"53\":1}}],[\"评论\",{\"1\":{\"50\":1,\"53\":1}}],[\"链接\",{\"1\":{\"50\":1}}],[\"下面是一个种更简单的判断方法\",{\"1\":{\"82\":1}}],[\"下面我们使用替换法来计算以下这个递归的时间复杂度\",{\"1\":{\"22\":1}}],[\"下一篇\",{\"1\":{\"50\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"53\":1}}],[\"更新时间\",{\"1\":{\"50\":1}}],[\"编辑此页链接\",{\"1\":{\"50\":1}}],[\"编号\",{\"1\":{\"29\":1}}],[\"贡献者\",{\"1\":{\"50\":1,\"53\":1}}],[\"路径导航\",{\"1\":{\"50\":1,\"53\":1}}],[\"侧边栏\",{\"1\":{\"50\":1,\"53\":1}}],[\"本页面就是一个示例\",{\"1\":{\"50\":1}}],[\"主题扩展了更多\",{\"1\":{\"61\":1}}],[\"主题扩展\",{\"0\":{\"61\":1}}],[\"主题也带有以下元素\",{\"1\":{\"53\":1}}],[\"主要从\",{\"1\":{\"56\":1}}],[\"主要功能与配置演示\",{\"0\":{\"48\":1}}],[\"主方法\",{\"0\":{\"24\":1}}],[\"∞\",{\"1\":{\"45\":1}}],[\"优先级队列\",{\"0\":{\"45\":1},\"2\":{\"47\":1}}],[\"并且投影矩阵公式也会有所不同\",{\"1\":{\"99\":1,\"102\":1}}],[\"并且在任一高度\",{\"1\":{\"43\":1}}],[\"并且f\",{\"1\":{\"24\":1}}],[\"含有\",{\"1\":{\"43\":1}}],[\"根据透视投影矩阵\",{\"1\":{\"84\":1}}],[\"根据主方法定理第二种情况可得\",{\"1\":{\"41\":1}}],[\"根据假设有\",{\"1\":{\"33\":1}}],[\"≠\",{\"1\":{\"41\":1}}],[\"维持堆的性质\",{\"0\":{\"41\":1}}],[\"最多有\",{\"1\":{\"43\":1}}],[\"最大堆\",{\"1\":{\"40\":1}}],[\"最坏情况下时间复杂度为\",{\"1\":{\"29\":1}}],[\"堆\",{\"0\":{\"40\":1}}],[\"堆排序\",{\"0\":{\"39\":1,\"44\":1},\"2\":{\"47\":1}}],[\"概率\",{\"2\":{\"38\":1}}],[\"概率分析示例\",{\"0\":{\"34\":1}}],[\"概率分析和随机化算法\",{\"0\":{\"28\":1}}],[\"才能使得每个桶中都至少有1个球\",{\"1\":{\"36\":1}}],[\"才能使得指定的桶中至少有1个球\",{\"1\":{\"36\":1}}],[\"3x3\",{\"1\":{\"93\":1,\"94\":1}}],[\"3\",{\"1\":{\"36\":1,\"41\":1,\"90\":1}}],[\"365\",{\"1\":{\"35\":1}}],[\"符合几何分布\",{\"1\":{\"36\":1}}],[\"失败概率为\",{\"1\":{\"36\":1}}],[\"球进入指定的桶中otherwise​​\",{\"1\":{\"36\":1}}],[\"球进入指定的桶中\",{\"1\":{\"36\":1}}],[\"球与桶\",{\"0\":{\"36\":1}}],[\"第一步\",{\"1\":{\"102\":1}}],[\"第\",{\"1\":{\"36\":1}}],[\"这意味着你可以在\",{\"1\":{\"76\":1}}],[\"这一问题模型对于分析哈希算法特别有用\",{\"1\":{\"36\":1}}],[\"这时候就可以使用随机化算法\",{\"1\":{\"33\":1}}],[\"至少有一对生日相同\",{\"1\":{\"35\":1}}],[\"人时\",{\"1\":{\"35\":1}}],[\"天\",{\"1\":{\"35\":1}}],[\"hxz​\",{\"1\":{\"96\":1}}],[\"hope\",{\"1\":{\"74\":1}}],[\"h1\",{\"1\":{\"73\":2}}],[\"h2o\",{\"1\":{\"68\":1}}],[\"h\",{\"1\":{\"43\":1}}],[\"heapsort\",{\"1\":{\"44\":1}}],[\"heap\",{\"1\":{\"41\":2,\"42\":2,\"44\":3,\"45\":16}}],[\"heapify\",{\"1\":{\"41\":2,\"42\":1,\"44\":1,\"45\":1}}],[\"have\",{\"1\":{\"35\":2}}],[\"hired​​\",{\"1\":{\"31\":1}}],[\"hiredif\",{\"1\":{\"31\":1}}],[\"hired\",{\"1\":{\"31\":1}}],[\"hire\",{\"1\":{\"29\":2,\"33\":2}}],[\"两人生日相同\",{\"1\":{\"35\":1}}],[\"解\",{\"1\":{\"35\":1,\"36\":3}}],[\"有\",{\"1\":{\"35\":2,\"36\":2,\"83\":1,\"84\":1,\"88\":1}}],[\"期望多少人情况下\",{\"1\":{\"35\":1}}],[\"问题\",{\"1\":{\"35\":1,\"36\":3}}],[\"生日悖论\",{\"0\":{\"35\":1}}],[\"的方向\",{\"1\":{\"99\":2,\"102\":2}}],[\"的维度\",{\"1\":{\"89\":1}}],[\"的\",{\"1\":{\"73\":1,\"74\":1}}],[\"的任一\",{\"1\":{\"33\":1}}],[\"的一个排列\",{\"1\":{\"29\":1}}],[\"数组\",{\"1\":{\"33\":1}}],[\"成立终止\",{\"1\":{\"33\":1}}],[\"初始\",{\"1\":{\"33\":1}}],[\"中标准\",{\"1\":{\"99\":2,\"102\":2}}],[\"中使用\",{\"1\":{\"76\":1}}],[\"中设置页面信息\",{\"1\":{\"74\":1}}],[\"中设置页面标题\",{\"1\":{\"73\":1}}],[\"中的第一个\",{\"1\":{\"73\":1}}],[\"中的\",{\"1\":{\"60\":1}}],[\"中很重要的一个概念\",{\"1\":{\"58\":1}}],[\"中自定义它们\",{\"1\":{\"53\":1}}],[\"中\",{\"1\":{\"33\":1}}],[\"中前\",{\"1\":{\"33\":3}}],[\"放入\",{\"1\":{\"33\":1}}],[\"次循环中选择\",{\"1\":{\"33\":1}}],[\"次循环之后数组\",{\"1\":{\"33\":1}}],[\"次循环之后\",{\"1\":{\"33\":3}}],[\"记数组\",{\"1\":{\"33\":1}}],[\"推导\",{\"0\":{\"94\":1},\"1\":{\"33\":1}}],[\"等于\",{\"1\":{\"33\":1}}],[\"是标准正交向量\",{\"1\":{\"97\":1}}],[\"是三角形\",{\"1\":{\"83\":1}}],[\"是\",{\"1\":{\"58\":1}}],[\"是该排列的概率都相等\",{\"1\":{\"33\":1}}],[\"是列表\",{\"1\":{\"29\":1}}],[\"排列的概率为\",{\"1\":{\"33\":1}}],[\"排列\",{\"1\":{\"33\":1}}],[\"排序\",{\"2\":{\"9\":1}}],[\"经过\",{\"1\":{\"33\":3}}],[\"假定相机位置在\",{\"1\":{\"97\":1}}],[\"假定知道输入的分布情况下\",{\"1\":{\"29\":1}}],[\"假设\",{\"1\":{\"33\":1,\"35\":1,\"83\":1}}],[\"接下来使用数学归纳法证明该算法可以产生随机的排列分布\",{\"1\":{\"33\":1}}],[\"随机将\",{\"1\":{\"36\":1}}],[\"随机排列数组\",{\"1\":{\"33\":1}}],[\"随机化算法的行为不仅取决于输入\",{\"1\":{\"33\":1}}],[\"随机化算法\",{\"0\":{\"33\":1},\"2\":{\"38\":1}}],[\"一般使用期望运行时间来描述随机化算法运行复杂度\",{\"1\":{\"33\":1}}],[\"综上\",{\"1\":{\"33\":1,\"97\":1}}],[\"而是每次都随机选择一个申请人来面试\",{\"1\":{\"33\":1}}],[\"顺序来面试\",{\"1\":{\"33\":1}}],[\"例如\",{\"1\":{\"33\":1,\"90\":1}}],[\"我们希望通过一个旋转矩阵变换将\",{\"1\":{\"97\":1}}],[\"我们可以先对整体一起进行矩阵变换\",{\"1\":{\"97\":1}}],[\"我们可以假定申请人以完全随机的顺序进来\",{\"1\":{\"29\":1}}],[\"我们并不知道输入的分布情况或者无法对输入的分布进行建模\",{\"1\":{\"33\":1}}],[\"很多情况下\",{\"1\":{\"33\":1}}],[\"每个\",{\"1\":{\"76\":1}}],[\"每次成功投进的概率为\",{\"1\":{\"36\":1}}],[\"每一个阶段都会持续到投入一个空的桶中为止\",{\"1\":{\"36\":1}}],[\"每一个桶中期望会有多少个球\",{\"1\":{\"36\":1}}],[\"每一个申请人\",{\"1\":{\"29\":1}}],[\"每对数为逆序对的概率是\",{\"1\":{\"32\":1}}],[\"对\",{\"1\":{\"60\":1}}],[\"对数\",{\"1\":{\"32\":1}}],[\"对于任意矩阵\",{\"1\":{\"91\":1}}],[\"对于\",{\"1\":{\"33\":1,\"75\":1}}],[\"对于雇佣问题我们不按照给定的1\",{\"1\":{\"33\":1}}],[\"对于雇佣问题\",{\"1\":{\"29\":1}}],[\"对于递归等式\",{\"1\":{\"24\":1}}],[\"共有\",{\"1\":{\"32\":1}}],[\"将由\",{\"1\":{\"102\":1}}],[\"将朝向从\",{\"1\":{\"97\":1}}],[\"将这\",{\"1\":{\"88\":1}}],[\"将期望分解为每一个具体的事件\",{\"1\":{\"32\":1}}],[\"将你的个人介绍和档案放置在此处\",{\"1\":{\"0\":1}}],[\"逆序对的期望数\",{\"0\":{\"32\":1}}],[\"个列向量进行线性变换后所能表示的向量记为\",{\"1\":{\"88\":1}}],[\"个列向量\",{\"1\":{\"88\":1}}],[\"个结点\",{\"1\":{\"43\":1}}],[\"个阶段中需要投多少球才能投进空的桶中\",{\"1\":{\"36\":1}}],[\"个阶段\",{\"1\":{\"36\":1}}],[\"个球\",{\"1\":{\"36\":1}}],[\"个球进入指定的桶中\",{\"1\":{\"36\":1}}],[\"个球投入桶中\",{\"1\":{\"36\":1}}],[\"个相同的桶\",{\"1\":{\"36\":1}}],[\"个人生日相同\",{\"1\":{\"35\":1}}],[\"个元素的堆的高度\",{\"1\":{\"43\":1}}],[\"个元素正好为\",{\"1\":{\"33\":2}}],[\"个元素为\",{\"1\":{\"33\":1}}],[\"个元素中的任一\",{\"1\":{\"33\":1}}],[\"个申请人是否雇佣\",{\"1\":{\"31\":1}}],[\"个排列出现的概率都相等\",{\"1\":{\"29\":1}}],[\"表示相机的旋转朝向\",{\"1\":{\"97\":1}}],[\"表示该矩阵变换进行了翻转操作\",{\"1\":{\"90\":1}}],[\"表示该矩阵变换进行了降维操作\",{\"1\":{\"90\":1}}],[\"表示该矩阵对空间进行变换的缩放程度\",{\"1\":{\"90\":1}}],[\"表示由矩阵的列向量所能构成的向量所组成的向量空间\",{\"1\":{\"89\":1}}],[\"表示需要投多少球才能使得每个桶中都至少有\",{\"1\":{\"36\":1}}],[\"表示需要投多少球才能成功投进指定的桶\",{\"1\":{\"36\":1}}],[\"表示有多少球进入指定的桶中\",{\"1\":{\"36\":1}}],[\"表示有多少对生日相同\",{\"1\":{\"35\":1}}],[\"表示\",{\"1\":{\"33\":1,\"35\":1}}],[\"表示数组\",{\"1\":{\"33\":1}}],[\"表示经过前面\",{\"1\":{\"33\":1}}],[\"表示第\",{\"1\":{\"31\":1,\"33\":1,\"36\":2}}],[\"表示雇佣次数\",{\"1\":{\"31\":1}}],[\"示例\",{\"0\":{\"31\":1,\"32\":1}}],[\"令随机变量\",{\"1\":{\"31\":1}}],[\"令\",{\"1\":{\"30\":1,\"33\":3,\"35\":2,\"36\":4,\"84\":1}}],[\"引理\",{\"1\":{\"30\":1}}],[\"都有一个排名\",{\"1\":{\"29\":1}}],[\"雇佣问题\",{\"0\":{\"29\":1,\"31\":1}}],[\"用于解决如下的递归等式\",{\"1\":{\"25\":1}}],[\"满足多项式成长的条件\",{\"1\":{\"25\":1}}],[\"满足\",{\"1\":{\"24\":1,\"25\":1,\"91\":1}}],[\"使用指南\",{\"1\":{\"74\":2},\"2\":{\"49\":1,\"51\":1,\"70\":1,\"77\":1,\"78\":1}}],[\"使用数学归纳法进行证明\",{\"1\":{\"22\":1}}],[\"使得相机位于原点且朝向从\",{\"1\":{\"97\":1}}],[\"使得\",{\"1\":{\"24\":1}}],[\"则有\",{\"1\":{\"30\":1,\"31\":1,\"43\":1}}],[\"则表示所有\",{\"1\":{\"29\":1}}],[\"则\",{\"1\":{\"24\":3,\"25\":1,\"33\":2,\"35\":1,\"36\":4,\"84\":1}}],[\"其旋转之后仍然是一组标准正交基\",{\"1\":{\"94\":1}}],[\"其概率为\",{\"1\":{\"33\":1}}],[\"其时间复杂度计算可以根据以下情况分类\",{\"1\":{\"24\":1}}],[\"其中\",{\"1\":{\"24\":2,\"25\":1}}],[\"非负\",{\"1\":{\"24\":1}}],[\"404\",{\"1\":{\"105\":1}}],[\"4\",{\"1\":{\"23\":1,\"32\":1}}],[\"递归树法\",{\"0\":{\"23\":1}}],[\"递归时间复杂度计算方法\",{\"0\":{\"21\":1}}],[\"就能保证最后的不等式成立\",{\"1\":{\"22\":1}}],[\"取得足够大\",{\"1\":{\"22\":1}}],[\"只要\",{\"1\":{\"22\":1}}],[\"时间复杂度\",{\"0\":{\"43\":1}}],[\"时间复杂度为\",{\"1\":{\"18\":1,\"19\":1,\"20\":1,\"41\":1,\"44\":1}}],[\"时\",{\"1\":{\"33\":1,\"35\":1}}],[\"时有\",{\"1\":{\"22\":1}}],[\"当然也可以变换为\",{\"1\":{\"97\":1}}],[\"当f\",{\"1\":{\"25\":1}}],[\"当\",{\"1\":{\"22\":1,\"33\":1,\"35\":1}}],[\"证明\",{\"1\":{\"22\":1}}],[\"猜测\",{\"1\":{\"22\":2}}],[\"替换法主要分为两个步骤\",{\"1\":{\"22\":1}}],[\"替换法\",{\"0\":{\"22\":1}}],[\"81\",{\"1\":{\"20\":1}}],[\"代价是4次矩阵加法增加到18次\",{\"1\":{\"20\":1}}],[\"基本变换\",{\"0\":{\"91\":1}}],[\"基本思想是将子问题从8次矩阵乘法减少到7次\",{\"1\":{\"20\":1}}],[\"基础排序\",{\"0\":{\"3\":1}}],[\"x+y\",{\"1\":{\"91\":2}}],[\"xp​−xc​\",{\"1\":{\"83\":2}}],[\"xp​yp​1​=αxa​+βxb​+γxc​=αya​+βyb​+γyc​=α+β+γ​\",{\"1\":{\"83\":1}}],[\"xmax\",{\"1\":{\"82\":1}}],[\"xmin\",{\"1\":{\"82\":1}}],[\"xb​−xc​\",{\"1\":{\"83\":3}}],[\"xb\",{\"1\":{\"36\":1}}],[\"x=k\",{\"1\":{\"36\":1}}],[\"x1\",{\"1\":{\"33\":1,\"36\":1}}],[\"xk+1\",{\"1\":{\"33\":1}}],[\"xk+1>\",{\"1\":{\"33\":2}}],[\"xk>\",{\"1\":{\"33\":1}}],[\"x2\",{\"1\":{\"33\":3}}],[\"xij​\",{\"1\":{\"35\":1}}],[\"xij​​=i\",{\"1\":{\"35\":1}}],[\"xij\",{\"1\":{\"35\":2}}],[\"xi​\",{\"1\":{\"31\":1,\"36\":2}}],[\"xi​​=i\",{\"1\":{\"31\":1,\"36\":1}}],[\"xi\",{\"1\":{\"31\":1,\"36\":4}}],[\"xa​−xc​\",{\"1\":{\"83\":3}}],[\"xa\",{\"1\":{\"30\":2}}],[\"x\",{\"1\":{\"19\":1,\"25\":1,\"31\":2,\"35\":2,\"36\":6,\"45\":9,\"82\":4,\"91\":4,\"97\":2}}],[\"directx\",{\"0\":{\"101\":1},\"1\":{\"99\":1,\"102\":1}}],[\"divide\",{\"1\":{\"19\":1}}],[\"does\",{\"1\":{\"30\":1}}],[\"downto\",{\"1\":{\"6\":1,\"42\":1,\"44\":1}}],[\"dummy\",{\"1\":{\"29\":1}}],[\"​cn​​\",{\"1\":{\"88\":1}}],[\"​wc​γ\",{\"1\":{\"84\":1}}],[\"​wb​β\",{\"1\":{\"84\":1}}],[\"​wa​α\",{\"1\":{\"84\":1}}],[\"​+wc​γ\",{\"1\":{\"84\":4}}],[\"​+wc​kγ\",{\"1\":{\"84\":1}}],[\"​+wb​β\",{\"1\":{\"84\":4}}],[\"​+wb​kβ\",{\"1\":{\"84\":1}}],[\"​2hh​≤cnh=0∑∞​2hh​≤cn⋅\",{\"1\":{\"43\":1}}],[\"​2hn​ch=cnh=0∑\",{\"1\":{\"43\":1}}],[\"​​=​1000​0100​000\",{\"1\":{\"101\":1}}],[\"​​=wa​α\",{\"1\":{\"84\":2}}],[\"​​​\",{\"1\":{\"84\":1}}],[\"​​\",{\"1\":{\"33\":1,\"35\":1,\"84\":1}}],[\"​dx\",{\"1\":{\"25\":1}}],[\"​≤2c\",{\"1\":{\"22\":1}}],[\"​\",{\"1\":{\"19\":1,\"31\":1,\"33\":1,\"36\":1,\"43\":2,\"84\":4,\"91\":1}}],[\"​=​r−l2​000​0t−b2​00​00f−n2​0​0001​​​1000​0100​0010​−2l+r​−2b+t​−2n+f​1​​=​r−l2​000​0t−b2​00​00f−n2​0​l−rl+r​b−tb+t​n−fn+f​1​​​\",{\"1\":{\"100\":1}}],[\"​=s\",{\"1\":{\"100\":1}}],[\"​=f\",{\"1\":{\"91\":1}}],[\"​=wa​α\",{\"1\":{\"84\":1}}],[\"​=wc​kγ\",{\"1\":{\"84\":1}}],[\"​=wb​kβ\",{\"1\":{\"84\":1}}],[\"​=αwa​+βwb​+γwc​αwa​​=αwa​+βwb​+γwc​βwb​​=αwa​+βwb​+γwc​γwc​​​\",{\"1\":{\"84\":1}}],[\"​=αwa​+βwb​+γwc​αa\",{\"1\":{\"84\":1}}],[\"​=αa+βb+γc=α\",{\"1\":{\"84\":1}}],[\"​=1=1​\",{\"1\":{\"84\":1}}],[\"​=1−α−β​\",{\"1\":{\"83\":1}}],[\"​=mst​po\",{\"1\":{\"101\":1}}],[\"​=m\",{\"1\":{\"84\":1}}],[\"​=h=0∑\",{\"1\":{\"43\":1}}],[\"​=n\",{\"1\":{\"33\":1}}],[\"​=p\",{\"1\":{\"33\":1}}],[\"​=e\",{\"1\":{\"31\":1,\"35\":1,\"36\":2}}],[\"​=\",{\"1\":{\"19\":1,\"83\":1}}],[\"​=∞\",{\"1\":{\"15\":1}}],[\"​=0\",{\"1\":{\"14\":1}}],[\"cn\",{\"1\":{\"88\":1}}],[\"c2\",{\"1\":{\"88\":1}}],[\"c1\",{\"1\":{\"88\":1}}],[\"c1​​c2​​\",{\"1\":{\"88\":1}}],[\"c1​\",{\"1\":{\"84\":3}}],[\"c11​c21​​c12​c22​​\",{\"1\":{\"19\":1}}],[\"cb×cq​\",{\"1\":{\"82\":1}}],[\"cb×ca\",{\"1\":{\"82\":1}}],[\"current\",{\"1\":{\"45\":1}}],[\"ch≤h=0∑\",{\"1\":{\"43\":1}}],[\"ci​n+ch​n\",{\"1\":{\"29\":1}}],[\"ca×cq​\",{\"1\":{\"82\":1}}],[\"candidates\",{\"1\":{\"33\":1}}],[\"candidate\",{\"1\":{\"29\":6,\"31\":3}}],[\"case\",{\"1\":{\"19\":1}}],[\"cf\",{\"1\":{\"24\":1}}],[\"c₂₂\",{\"1\":{\"19\":2}}],[\"c₂₁\",{\"1\":{\"19\":2}}],[\"c₁₂\",{\"1\":{\"19\":2}}],[\"c₁₁\",{\"1\":{\"19\":2}}],[\"conquer\",{\"1\":{\"19\":1}}],[\"copy\",{\"1\":{\"7\":2}}],[\"c\",{\"1\":{\"18\":3,\"19\":4,\"22\":1,\"24\":1,\"32\":2,\"82\":1,\"84\":5,\"97\":1}}],[\"mview​=rview​tview​​=​rx​ux​vx​0​ry​uy​vy​0​rz​uz​vz​0​0001​​​1000​0100​0010​−tx​−ty​−tz​1​​=​rx​ux​vx​0​ry​uy​vy​0​rz​uz​vz​0​−t⋅r−t⋅u−t⋅v1​​​\",{\"1\":{\"97\":1}}],[\"my\",{\"1\":{\"91\":1}}],[\"mx\",{\"1\":{\"91\":1}}],[\"m=\",{\"1\":{\"88\":1}}],[\"m\",{\"1\":{\"84\":2,\"88\":1,\"91\":4}}],[\"ms\",{\"1\":{\"74\":1}}],[\"more\",{\"1\":{\"72\":1}}],[\"markdown\",{\"0\":{\"56\":1,\"57\":1,\"58\":1,\"59\":1},\"1\":{\"56\":2,\"57\":3,\"58\":1,\"59\":3,\"60\":2,\"61\":1,\"73\":3,\"74\":1,\"75\":2,\"76\":2},\"2\":{\"71\":1}}],[\"maximum\",{\"1\":{\"45\":2}}],[\"max\",{\"1\":{\"41\":2,\"42\":2,\"44\":2,\"45\":10}}],[\"matrix\",{\"1\":{\"18\":1,\"19\":9}}],[\"multiply\",{\"1\":{\"18\":1,\"19\":9}}],[\"merge\",{\"1\":{\"7\":5}}],[\"矩阵相乘\",{\"0\":{\"18\":1,\"19\":1,\"20\":1}}],[\"即把视锥体往中间压缩成一个长方体\",{\"1\":{\"102\":1}}],[\"即秩⬇\",{\"1\":{\"90\":1}}],[\"即\",{\"1\":{\"14\":1,\"15\":1,\"31\":1,\"35\":1}}],[\"∀c∃n0​>0\",{\"1\":{\"14\":1,\"15\":1}}],[\"∀n≥n0​\",{\"1\":{\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1}}],[\"θ\",{\"1\":{\"13\":1,\"18\":1}}],[\"ωyω​\",{\"1\":{\"65\":2}}],[\"ω\",{\"1\":{\"12\":1,\"15\":1}}],[\"g\",{\"1\":{\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1}}],[\"opengl\",{\"0\":{\"100\":1},\"1\":{\"99\":1,\"102\":1}}],[\"overflow\",{\"1\":{\"45\":1}}],[\"occur​\",{\"1\":{\"30\":1}}],[\"occursa\",{\"1\":{\"30\":1}}],[\"o\",{\"1\":{\"11\":1,\"14\":1,\"29\":1,\"41\":1,\"44\":1}}],[\"of\",{\"1\":{\"7\":2,\"33\":1}}],[\"公式\",{\"1\":{\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1}}],[\"渐进复杂度\",{\"0\":{\"10\":1}}],[\"≥\",{\"1\":{\"7\":1}}],[\"≤2c\",{\"1\":{\"22\":1}}],[\"≤cnlgn​\",{\"1\":{\"22\":1}}],[\"≤c2​g\",{\"1\":{\"13\":1}}],[\"≤cg\",{\"1\":{\"11\":1}}],[\"≤f\",{\"1\":{\"12\":1,\"13\":1}}],[\"≤\",{\"1\":{\"7\":1,\"41\":3}}],[\"km\",{\"1\":{\"91\":1}}],[\"kx\",{\"1\":{\"91\":2}}],[\"kf\",{\"1\":{\"91\":1}}],[\"kαβγ​=wa​α\",{\"1\":{\"84\":1}}],[\"k=αwa​+βwb​+γwc​1​\",{\"1\":{\"84\":1}}],[\"k−1\",{\"1\":{\"35\":1}}],[\"k2​\",{\"1\":{\"35\":1}}],[\"k+1\",{\"1\":{\"33\":5}}],[\"k\",{\"1\":{\"7\":11,\"18\":3,\"33\":7,\"35\":3,\"45\":5}}],[\"key\",{\"1\":{\"4\":3,\"45\":10}}],[\"b1​\",{\"1\":{\"84\":3}}],[\"b11​b21​​b12​b22​​\",{\"1\":{\"19\":1}}],[\"bc×bq​\",{\"1\":{\"82\":1}}],[\"build\",{\"1\":{\"42\":1,\"44\":1}}],[\"bubble\",{\"1\":{\"6\":1}}],[\"b​\",{\"1\":{\"36\":1}}],[\"b>\",{\"1\":{\"36\":1}}],[\"birthdayotherwise​​\",{\"1\":{\"35\":1}}],[\"birthday\",{\"1\":{\"35\":1}}],[\"bi​\",{\"1\":{\"25\":1}}],[\"ba×bq​\",{\"1\":{\"82\":1}}],[\"ba×bc\",{\"1\":{\"82\":1}}],[\"bazi是主方法的一般化形式\",{\"1\":{\"25\":1}}],[\"bazi法\",{\"0\":{\"25\":1}}],[\"base\",{\"1\":{\"19\":1}}],[\"b₂₂\",{\"1\":{\"19\":2}}],[\"b₂₁\",{\"1\":{\"19\":2}}],[\"b₁₂\",{\"1\":{\"19\":2}}],[\"b₁₁\",{\"1\":{\"19\":2}}],[\"b\",{\"1\":{\"18\":2,\"19\":3,\"24\":3,\"36\":10,\"82\":1,\"84\":5,\"99\":1,\"102\":3}}],[\"better\",{\"1\":{\"29\":1}}],[\"best\",{\"1\":{\"29\":3}}],[\"be\",{\"1\":{\"7\":1,\"73\":1}}],[\"logy\",{\"1\":{\"65\":2}}],[\"largest\",{\"1\":{\"41\":7}}],[\"lnb+o\",{\"1\":{\"36\":1}}],[\"list\",{\"1\":{\"33\":1}}],[\"lgn\",{\"1\":{\"41\":1,\"43\":3}}],[\"lg\",{\"1\":{\"22\":2}}],[\"left\",{\"1\":{\"40\":1,\"41\":1}}],[\"least\",{\"1\":{\"29\":1}}],[\"let\",{\"1\":{\"7\":1}}],[\"length\",{\"1\":{\"7\":2}}],[\"l\",{\"1\":{\"7\":10,\"41\":4,\"99\":1,\"102\":3}}],[\"rview​=​rtutvt0​0001​​=​rx​ux​vx​0​ry​uy​vy​0​rz​uz​vz​0​0001​​\",{\"1\":{\"97\":1}}],[\"ra\",{\"1\":{\"94\":2}}],[\"random\",{\"1\":{\"33\":1}}],[\"randomly\",{\"1\":{\"33\":2}}],[\"randomized\",{\"1\":{\"33\":1}}],[\"rank\",{\"1\":{\"29\":3}}],[\"rz​\",{\"1\":{\"93\":1}}],[\"ry​\",{\"1\":{\"93\":1}}],[\"rx​\",{\"1\":{\"93\":1}}],[\"r−i​\",{\"1\":{\"65\":1}}],[\"r−i+1\",{\"1\":{\"65\":1}}],[\"r+i=1∑r​ωi\",{\"1\":{\"65\":1}}],[\"right\",{\"1\":{\"40\":1,\"41\":1}}],[\"regarded\",{\"1\":{\"73\":1}}],[\"recursive\",{\"1\":{\"19\":9}}],[\"return\",{\"1\":{\"7\":1,\"19\":1,\"40\":3,\"45\":3}}],[\"r\",{\"1\":{\"7\":18,\"41\":4,\"88\":1,\"89\":1,\"94\":1,\"97\":5,\"99\":1,\"102\":3}}],[\"qk\",{\"1\":{\"36\":1}}],[\"qualified\",{\"1\":{\"29\":1}}],[\"q+1\",{\"1\":{\"7\":2}}],[\"q\",{\"1\":{\"7\":8,\"36\":1}}],[\"po\",{\"1\":{\"100\":1,\"101\":1}}],[\"pp\",{\"1\":{\"84\":1}}],[\"p1​\",{\"1\":{\"84\":3}}],[\"public\",{\"1\":{\"75\":1}}],[\"page\",{\"1\":{\"73\":1}}],[\"parent\",{\"1\":{\"40\":1,\"45\":3}}],[\"partition\",{\"1\":{\"19\":1}}],[\"person\",{\"1\":{\"35\":2}}],[\"permute\",{\"1\":{\"33\":2}}],[\"pr\",{\"1\":{\"30\":1}}],[\"p\",{\"1\":{\"7\":10,\"25\":1,\"33\":4,\"36\":4,\"83\":1,\"84\":5}}],[\"归并排序\",{\"0\":{\"7\":1}}],[\"冒泡排序\",{\"0\":{\"6\":1}}],[\"<0\",{\"1\":{\"97\":2}}],[\"<x\",{\"1\":{\"97\":2}}],[\"<x1\",{\"1\":{\"33\":3}}],[\"<r\",{\"1\":{\"97\":2}}],[\"<rank\",{\"1\":{\"29\":1}}],[\"<1\",{\"1\":{\"29\":1,\"36\":1,\"97\":1}}],[\"<=\",{\"1\":{\"24\":1}}],[\"<f\",{\"1\":{\"15\":1}}],[\"<cg\",{\"1\":{\"14\":1}}],[\"<\",{\"1\":{\"5\":1,\"6\":1,\"7\":4,\"24\":1,\"45\":3,\"82\":2,\"90\":1,\"99\":2,\"102\":2}}],[\"wc​​=αwa​+βwb​+γwc​αwa​​a\",{\"1\":{\"84\":1}}],[\"wc​=αwa​+βwb​+γwc​​\",{\"1\":{\"84\":1}}],[\"wc​wc​​\",{\"1\":{\"84\":1}}],[\"wb​+γc\",{\"1\":{\"84\":2}}],[\"wb​wb​​\",{\"1\":{\"84\":1}}],[\"wa​+βb\",{\"1\":{\"84\":2}}],[\"wa​wa​​\",{\"1\":{\"84\":1}}],[\"wp​wp​​=α\",{\"1\":{\"84\":1}}],[\"wp​wp​​\",{\"1\":{\"84\":1}}],[\"will\",{\"1\":{\"73\":1}}],[\"with\",{\"1\":{\"5\":2,\"6\":1,\"33\":1,\"41\":1,\"44\":1,\"45\":1}}],[\"where\",{\"1\":{\"45\":1}}],[\"while\",{\"1\":{\"4\":1,\"7\":3,\"45\":1}}],[\"error\",{\"1\":{\"45\":2}}],[\"extract\",{\"1\":{\"45\":1}}],[\"exchange\",{\"1\":{\"5\":2,\"6\":1,\"41\":1,\"44\":1,\"45\":1}}],[\"e2​∣e1​\",{\"1\":{\"33\":1}}],[\"e2\",{\"1\":{\"33\":1}}],[\"e1∩e2\",{\"1\":{\"33\":1}}],[\"e1​∩e2​\",{\"1\":{\"33\":1}}],[\"e1​\",{\"1\":{\"33\":2}}],[\"e1\",{\"1\":{\"33\":1}}],[\"e\",{\"1\":{\"30\":1,\"31\":1,\"33\":4,\"35\":2,\"36\":4}}],[\"else\",{\"1\":{\"7\":1,\"41\":1}}],[\"element\",{\"1\":{\"5\":1}}],[\"found\",{\"1\":{\"105\":1}}],[\"for\",{\"1\":{\"4\":1,\"5\":2,\"6\":2,\"7\":2,\"18\":3,\"29\":1,\"33\":1,\"42\":1,\"44\":1,\"82\":2}}],[\"first\",{\"1\":{\"73\":1}}],[\"find\",{\"1\":{\"5\":1,\"45\":1}}],[\"frontmatter\",{\"1\":{\"50\":1,\"53\":1,\"58\":4,\"73\":1,\"74\":1}}],[\"f\",{\"1\":{\"11\":1,\"12\":1,\"13\":1,\"14\":2,\"15\":2,\"24\":5,\"91\":1,\"99\":3,\"102\":5}}],[\"+z\",{\"1\":{\"99\":2,\"102\":1}}],[\"+kn​cn​\",{\"1\":{\"88\":1}}],[\"+αwa​+βwb​+γwc​γwc​​c\",{\"1\":{\"84\":1}}],[\"+αwa​+βwb​+γwc​βwb​​b\",{\"1\":{\"84\":1}}],[\"+mγ\",{\"1\":{\"84\":1}}],[\"+mβ\",{\"1\":{\"84\":1}}],[\"+γ\",{\"1\":{\"84\":4}}],[\"+β\",{\"1\":{\"84\":4}}],[\"++y\",{\"1\":{\"82\":1}}],[\"++x\",{\"1\":{\"82\":1}}],[\"+f\",{\"1\":{\"25\":1,\"91\":1}}],[\"+θ\",{\"1\":{\"19\":1,\"20\":1,\"22\":4,\"23\":1,\"41\":1}}],[\"+\",{\"1\":{\"4\":2,\"5\":1,\"6\":1,\"7\":12,\"18\":1,\"19\":1,\"24\":1,\"36\":3,\"45\":1,\"76\":1,\"82\":2,\"91\":1}}],[\"0>\",{\"1\":{\"97\":2}}],[\"0≤c1​g\",{\"1\":{\"13\":1}}],[\"0≤cg\",{\"1\":{\"12\":1,\"15\":1}}],[\"0≤f\",{\"1\":{\"11\":1,\"14\":1}}],[\"0\",{\"1\":{\"4\":1,\"7\":4,\"24\":2,\"29\":2,\"82\":2,\"90\":2,\"97\":3,\"99\":3,\"101\":1,\"102\":3}}],[\">0​\",{\"1\":{\"82\":1}}],[\">0\",{\"1\":{\"82\":2}}],[\">=\",{\"1\":{\"22\":1,\"24\":1,\"35\":1}}],[\">\",{\"1\":{\"4\":2,\"24\":2,\"29\":1,\"41\":2,\"45\":1,\"99\":2,\"102\":2}}],[\"j\",{\"1\":{\"4\":8,\"5\":3,\"6\":5,\"7\":13,\"18\":4,\"35\":3}}],[\"1>\",{\"1\":{\"97\":1}}],[\"1=α+β+γ=wa​kα\",{\"1\":{\"84\":1}}],[\"19th\",{\"1\":{\"68\":1}}],[\"1−1\",{\"1\":{\"43\":1}}],[\"1p\",{\"1\":{\"36\":1}}],[\"10​第\",{\"1\":{\"36\":1}}],[\"10​if\",{\"1\":{\"31\":1,\"35\":1}}],[\"10​a\",{\"1\":{\"30\":1}}],[\"1+∫1n​xp+1f\",{\"1\":{\"25\":1}}],[\"1\",{\"1\":{\"4\":6,\"5\":3,\"6\":5,\"7\":11,\"18\":3,\"19\":10,\"22\":1,\"24\":2,\"29\":4,\"31\":1,\"32\":4,\"33\":7,\"35\":2,\"36\":9,\"41\":1,\"42\":1,\"44\":3,\"45\":7,\"63\":1,\"66\":1,\"74\":2,\"76\":2,\"84\":1,\"93\":1,\"97\":2,\"99\":11,\"100\":1,\"101\":2,\"102\":11}}],[\"smaller\",{\"1\":{\"45\":1}}],[\"smallest\",{\"1\":{\"5\":5}}],[\"size\",{\"1\":{\"41\":2,\"42\":1,\"44\":2,\"45\":8}}],[\"same\",{\"1\":{\"35\":2}}],[\"swap\",{\"1\":{\"33\":1}}],[\"s\",{\"1\":{\"30\":2,\"36\":1,\"95\":2,\"96\":1,\"100\":1}}],[\"strassen\",{\"0\":{\"20\":1}}],[\"submatrices\",{\"1\":{\"19\":1}}],[\"subarray\",{\"1\":{\"4\":1}}],[\"selection\",{\"1\":{\"5\":1}}],[\"sorted\",{\"1\":{\"4\":1}}],[\"sort\",{\"1\":{\"4\":1,\"5\":1,\"6\":1,\"7\":3}}],[\"tview​=​1000​0100​0010​−tx​−ty​−tz​1​​\",{\"1\":{\"97\":1}}],[\"t=raatrt=rrt=i\",{\"1\":{\"94\":1}}],[\"tz​\",{\"1\":{\"92\":1}}],[\"ty​\",{\"1\":{\"92\":1}}],[\"tx​\",{\"1\":{\"92\":1}}],[\"tri\",{\"1\":{\"82\":1}}],[\"title\",{\"1\":{\"73\":3}}],[\"tex\",{\"0\":{\"65\":1}}],[\"than\",{\"1\":{\"29\":1,\"45\":1}}],[\"the\",{\"1\":{\"4\":1,\"33\":1,\"35\":2,\"45\":1,\"73\":1}}],[\"t\",{\"1\":{\"19\":1,\"20\":1,\"22\":3,\"23\":1,\"24\":4,\"25\":2,\"41\":3,\"43\":1,\"92\":2,\"99\":1,\"100\":2,\"102\":3}}],[\"toc\",{\"1\":{\"53\":1}}],[\"to\",{\"1\":{\"4\":1,\"5\":2,\"6\":1,\"7\":4,\"18\":3,\"29\":1,\"33\":1}}],[\"2020\",{\"1\":{\"74\":1}}],[\"2​=o\",{\"1\":{\"43\":1}}],[\"21\",{\"1\":{\"43\":1}}],[\"2h+1n​\",{\"1\":{\"43\":1}}],[\"2h+1\",{\"1\":{\"43\":1}}],[\"2i+1\",{\"1\":{\"40\":1}}],[\"2i\",{\"1\":{\"40\":1}}],[\"28\",{\"1\":{\"35\":1}}],[\"2n\",{\"1\":{\"35\":1,\"41\":1}}],[\"2n₀\",{\"1\":{\"22\":1}}],[\"2\",{\"1\":{\"4\":1,\"7\":1,\"19\":11,\"20\":1,\"22\":7,\"29\":1,\"32\":5,\"35\":1,\"36\":2,\"40\":1,\"42\":1,\"43\":2,\"44\":1,\"66\":1,\"84\":1,\"90\":1}}],[\"=​sx​000​0sy​00​00sz​0​0001​​\",{\"1\":{\"95\":1}}],[\"=​cosϕsinϕ00​−sinϕcosϕ00​0010​0001​​\",{\"1\":{\"93\":1}}],[\"=​cosϕ0−sinϕ0​0100​sinϕ0cosϕ0​0001​​\",{\"1\":{\"93\":1}}],[\"=​1000​0100​s010​0001​​\",{\"1\":{\"96\":1}}],[\"=​1000​0100​0010​tx​ty​tz​1​​\",{\"1\":{\"92\":1}}],[\"=​1000​0cosϕsinϕ0​0−sinϕcosϕ0​0001​​\",{\"1\":{\"93\":1}}],[\"=t\",{\"1\":{\"92\":1}}],[\"=f\",{\"1\":{\"91\":1}}],[\"=α\",{\"1\":{\"84\":1}}],[\"=αa\",{\"1\":{\"84\":1}}],[\"=mα\",{\"1\":{\"84\":1}}],[\"=m\",{\"1\":{\"84\":3}}],[\"=p\",{\"1\":{\"33\":1}}],[\"=n−k1​⋅n\",{\"1\":{\"33\":1}}],[\"=n\",{\"1\":{\"33\":1,\"36\":1}}],[\"=i=1∑b​b−i+1b​=bi=1∑b​i1​=b\",{\"1\":{\"36\":1}}],[\"=i=1∑b​e\",{\"1\":{\"36\":1}}],[\"=i=1∑k−1​j=i+1∑k​e\",{\"1\":{\"35\":1}}],[\"=i=1∑k​ai​t\",{\"1\":{\"25\":1}}],[\"=i=1∑n​i1​=lnn+o\",{\"1\":{\"31\":1}}],[\"=i=1∑n​e\",{\"1\":{\"31\":1,\"36\":1}}],[\"=ω\",{\"1\":{\"24\":1}}],[\"=3t\",{\"1\":{\"23\":1}}],[\"=cnlgn−cn+θ\",{\"1\":{\"22\":1}}],[\"=cnlg\",{\"1\":{\"22\":1}}],[\"=2t\",{\"1\":{\"22\":1}}],[\"=o\",{\"1\":{\"20\":1,\"22\":1,\"24\":1}}],[\"=7t\",{\"1\":{\"20\":1}}],[\"=θ\",{\"1\":{\"19\":1,\"20\":1,\"24\":4,\"25\":1}}],[\"=8t\",{\"1\":{\"19\":1}}],[\"==\",{\"1\":{\"19\":1,\"45\":1}}],[\"=\",{\"1\":{\"4\":6,\"5\":4,\"6\":2,\"7\":21,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"18\":4,\"19\":2,\"24\":1,\"29\":3,\"30\":3,\"31\":1,\"32\":1,\"33\":7,\"35\":5,\"36\":9,\"41\":6,\"42\":2,\"44\":2,\"45\":10,\"65\":1,\"82\":3,\"91\":2,\"97\":3}}],[\"image\",{\"1\":{\"82\":1}}],[\"ir⋯\",{\"1\":{\"65\":1}}],[\"it\",{\"1\":{\"59\":2}}],[\"i=1∑b​xi​\",{\"1\":{\"36\":1}}],[\"i=1∑k−1​j=i+1∑k​xij​\",{\"1\":{\"35\":1}}],[\"i=1∑k​bip​ai​​=1\",{\"1\":{\"25\":1}}],[\"i=1∑n​xi​\",{\"1\":{\"31\":1,\"36\":1}}],[\"is\",{\"1\":{\"29\":2,\"31\":3,\"45\":1}}],[\"if\",{\"1\":{\"5\":1,\"6\":1,\"7\":2,\"19\":1,\"29\":1,\"41\":3,\"45\":3}}],[\"inside\",{\"1\":{\"82\":1}}],[\"insert\",{\"1\":{\"4\":1,\"45\":1}}],[\"insertion\",{\"1\":{\"4\":1}}],[\"index\",{\"1\":{\"45\":1}}],[\"increase\",{\"1\":{\"45\":2}}],[\"int\",{\"1\":{\"82\":2}}],[\"interview\",{\"1\":{\"29\":1}}],[\"into\",{\"1\":{\"4\":1,\"19\":1}}],[\"in\",{\"1\":{\"5\":1,\"73\":1}}],[\"i\",{\"1\":{\"4\":5,\"5\":6,\"6\":2,\"7\":13,\"18\":4,\"29\":5,\"30\":3,\"31\":4,\"33\":3,\"35\":3,\"36\":5,\"40\":4,\"41\":7,\"42\":2,\"44\":2,\"45\":9,\"76\":1}}],[\"n1​=2nk\",{\"1\":{\"35\":1}}],[\"n−k−1\",{\"1\":{\"33\":1}}],[\"n−k\",{\"1\":{\"33\":2}}],[\"not\",{\"1\":{\"30\":1,\"31\":1,\"105\":1}}],[\"n>\",{\"1\":{\"29\":1}}],[\"np\",{\"1\":{\"25\":1}}],[\"nlogb​a+ϵ\",{\"1\":{\"24\":1}}],[\"nlogb​algk+1n\",{\"1\":{\"24\":1}}],[\"nlogb​algkn\",{\"1\":{\"24\":1}}],[\"nlogb​a\",{\"1\":{\"24\":1}}],[\"nlogb​a−ϵ\",{\"1\":{\"24\":1}}],[\"nlgn\",{\"1\":{\"22\":1,\"44\":1}}],[\"nlg7\",{\"1\":{\"20\":1}}],[\"n2\",{\"1\":{\"20\":2,\"23\":1}}],[\"n3\",{\"1\":{\"18\":1,\"19\":1}}],[\"n→∞lim​g\",{\"1\":{\"14\":1,\"15\":1}}],[\"new\",{\"1\":{\"7\":1,\"45\":1}}],[\"n\",{\"1\":{\"4\":2,\"5\":4,\"6\":3,\"7\":8,\"11\":4,\"12\":4,\"13\":5,\"14\":6,\"15\":6,\"18\":4,\"19\":14,\"20\":2,\"22\":15,\"23\":2,\"24\":14,\"25\":5,\"29\":6,\"32\":4,\"33\":18,\"35\":2,\"36\":1,\"41\":2,\"42\":3,\"43\":5,\"44\":3,\"45\":2,\"88\":3,\"99\":3,\"102\":5}}],[\"aabb\",{\"1\":{\"99\":4,\"102\":4}}],[\"a1​\",{\"1\":{\"84\":3}}],[\"a11​⋅b11​+a12​⋅b21​a21​⋅b11​+a22​⋅b21​​a11​⋅b12​+a12​⋅b22​a21​⋅b12​+a22​⋅b22​​\",{\"1\":{\"19\":1}}],[\"a11​a21​​a12​a22​​\",{\"1\":{\"19\":1}}],[\"abc\",{\"1\":{\"83\":1,\"84\":2}}],[\"ab×aq​\",{\"1\":{\"82\":1}}],[\"ac×aq​\",{\"1\":{\"82\":1}}],[\"ac×ab\",{\"1\":{\"82\":1}}],[\"as\",{\"1\":{\"73\":1}}],[\"assistant\",{\"1\":{\"29\":1,\"33\":2}}],[\"akra\",{\"0\":{\"25\":1},\"1\":{\"25\":1}}],[\"af\",{\"1\":{\"24\":1}}],[\"at\",{\"1\":{\"24\":1}}],[\"a₂₂\",{\"1\":{\"19\":2}}],[\"a₂₁\",{\"1\":{\"19\":2}}],[\"a₁₂\",{\"1\":{\"19\":2}}],[\"a₁₁\",{\"1\":{\"19\":2}}],[\"arrays\",{\"1\":{\"7\":1}}],[\"and\",{\"1\":{\"4\":1,\"5\":1,\"7\":2,\"19\":1,\"35\":2,\"41\":2,\"45\":1}}],[\"a\",{\"1\":{\"4\":8,\"5\":7,\"6\":5,\"7\":13,\"18\":2,\"19\":3,\"24\":1,\"29\":1,\"30\":5,\"33\":10,\"41\":10,\"42\":3,\"44\":7,\"45\":24,\"82\":1,\"84\":5,\"94\":1}}],[\"算法\",{\"2\":{\"2\":1,\"8\":1,\"16\":1,\"26\":1,\"37\":1,\"46\":1}}],[\"算法导论\",{\"0\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
